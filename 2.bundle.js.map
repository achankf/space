{"version":3,"sources":["webpack:///./node_modules/util/util.js","webpack:///(webpack)/buildin/global.js","webpack:///./node_modules/process/browser.js","webpack:///./node_modules/util/support/isBufferBrowser.js","webpack:///./node_modules/inherits/inherits_browser.js","webpack:///./node_modules/hammerjs/hammer.js"],"names":["global","process","formatRegExp","exports","format","f","isString","objects","i","arguments","length","push","inspect","join","args","len","str","String","replace","x","Number","JSON","stringify","_","isNull","isObject","deprecate","fn","msg","isUndefined","apply","this","noDeprecation","warned","throwDeprecation","Error","traceDeprecation","console","trace","error","debugEnviron","debugs","obj","opts","ctx","seen","stylize","stylizeNoColor","depth","colors","isBoolean","showHidden","_extend","customInspect","stylizeWithColor","formatValue","styleType","style","styles","value","recurseTimes","isFunction","constructor","prototype","ret","primitive","simple","isNumber","formatPrimitive","keys","Object","visibleKeys","array","hash","forEach","val","idx","arrayToHash","getOwnPropertyNames","isError","indexOf","formatError","name","isRegExp","RegExp","toString","call","isDate","Date","output","base","braces","isArray","toUTCString","l","hasOwnProperty","formatProperty","key","match","formatArray","map","pop","reduce","prev","cur","numLinesEst","reduceToSingleString","desc","getOwnPropertyDescriptor","get","set","split","line","substr","ar","Array","arg","re","objectToString","d","e","o","pad","n","debuglog","env","NODE_DEBUG","toUpperCase","test","pid","bold","italic","underline","inverse","white","grey","black","blue","cyan","green","magenta","red","yellow","special","number","boolean","undefined","null","string","date","regexp","isNullOrUndefined","isSymbol","isPrimitive","isBuffer","__webpack_require__","months","prop","log","time","getHours","getMinutes","getSeconds","getDate","getMonth","timestamp","inherits","origin","add","g","Function","eval","window","module","cachedSetTimeout","cachedClearTimeout","defaultSetTimout","defaultClearTimeout","runTimeout","fun","setTimeout","clearTimeout","currentQueue","queue","draining","queueIndex","cleanUpNextTick","concat","drainQueue","timeout","run","marker","runClearTimeout","Item","noop","nextTick","title","browser","argv","version","versions","on","addListener","once","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","binding","cwd","chdir","dir","umask","copy","fill","readUInt8","create","ctor","superCtor","super_","enumerable","writable","configurable","TempCtor","__WEBPACK_AMD_DEFINE_RESULT__","document","exportName","assign","VENDOR_PREFIXES","TEST_ELEMENT","createElement","TYPE_FUNCTION","round","Math","abs","now","setTimeoutContext","context","bindFn","invokeArrayArg","each","iterator","method","message","deprecationMessage","stack","warn","target","TypeError","index","source","nextKey","extend","dest","src","merge","inherit","child","properties","childP","baseP","_super","boolOrFn","ifUndefined","val1","val2","addEventListeners","types","handler","splitStr","type","addEventListener","removeEventListeners","removeEventListener","hasParent","node","parent","parentNode","inStr","find","trim","inArray","findByKey","toArray","slice","uniqueArray","sort","results","values","a","b","prefixed","property","prefix","camelProp","_uniqueId","getWindowForElement","element","doc","ownerDocument","defaultView","parentWindow","SUPPORT_TOUCH","SUPPORT_POINTER_EVENTS","SUPPORT_ONLY_TOUCH","navigator","userAgent","COMPUTE_INTERVAL","INPUT_START","INPUT_MOVE","INPUT_END","INPUT_CANCEL","DIRECTION_NONE","DIRECTION_LEFT","DIRECTION_RIGHT","DIRECTION_UP","DIRECTION_DOWN","DIRECTION_HORIZONTAL","DIRECTION_VERTICAL","DIRECTION_ALL","PROPS_XY","PROPS_CLIENT_XY","Input","manager","callback","self","options","inputTarget","domHandler","ev","enable","init","inputHandler","eventType","input","pointersLen","pointers","changedPointersLen","changedPointers","isFirst","isFinal","session","pointersLength","firstInput","simpleCloneInputData","firstMultiple","offsetCenter","center","getCenter","timeStamp","deltaTime","angle","getAngle","distance","getDistance","offset","offsetDelta","prevDelta","prevInput","deltaX","y","deltaY","computeDeltaXY","offsetDirection","getDirection","overallVelocity","getVelocity","overallVelocityX","overallVelocityY","scale","start","end","getScale","rotation","getRotation","maxPointers","velocity","velocityX","velocityY","direction","last","lastInterval","v","computeIntervalInputData","srcEvent","computeInputData","recognize","clientX","clientY","p1","p2","props","sqrt","atan2","PI","evEl","evTarget","evWin","destroy","MOUSE_INPUT_MAP","mousedown","mousemove","mouseup","MOUSE_ELEMENT_EVENTS","MOUSE_WINDOW_EVENTS","MouseInput","pressed","button","which","pointerType","POINTER_INPUT_MAP","pointerdown","pointermove","pointerup","pointercancel","pointerout","IE10_POINTER_TYPE_ENUM","2","3","4","5","POINTER_ELEMENT_EVENTS","POINTER_WINDOW_EVENTS","PointerEventInput","store","pointerEvents","MSPointerEvent","PointerEvent","removePointer","eventTypeNormalized","toLowerCase","isTouch","storeIndex","pointerId","splice","SINGLE_TOUCH_INPUT_MAP","touchstart","touchmove","touchend","touchcancel","SINGLE_TOUCH_TARGET_EVENTS","SINGLE_TOUCH_WINDOW_EVENTS","SingleTouchInput","started","touches","all","changed","changedTouches","TOUCH_INPUT_MAP","TOUCH_TARGET_EVENTS","TouchInput","targetIds","allTouches","identifier","targetTouches","changedTargetTouches","filter","touch","DEDUP_TIMEOUT","DEDUP_DISTANCE","TouchMouseInput","mouse","primaryTouch","lastTouches","setLastTouch","eventData","lastTouch","lts","inputEvent","inputData","isMouse","sourceCapabilities","firesTouchEvents","t","dx","dy","PREFIXED_TOUCH_ACTION","NATIVE_TOUCH_ACTION","TOUCH_ACTION_AUTO","TOUCH_ACTION_MANIPULATION","TOUCH_ACTION_NONE","TOUCH_ACTION_PAN_X","TOUCH_ACTION_PAN_Y","TOUCH_ACTION_MAP","touchMap","cssSupports","CSS","supports","getTouchActionProps","TouchAction","compute","actions","update","touchAction","recognizers","recognizer","getTouchAction","hasPanX","hasPanY","cleanTouchActions","preventDefaults","prevented","preventDefault","hasNone","isTapPointer","isTapMovement","isTapTouchTime","preventSrc","STATE_POSSIBLE","STATE_BEGAN","STATE_CHANGED","STATE_ENDED","STATE_RECOGNIZED","STATE_CANCELLED","Recognizer","defaults","id","state","simultaneous","requireFail","stateStr","directionStr","getRecognizerByNameIfManager","otherRecognizer","AttrRecognizer","PanRecognizer","pX","pY","PinchRecognizer","PressRecognizer","_timer","_input","RotateRecognizer","SwipeRecognizer","TapRecognizer","pTime","pCenter","count","Hammer","preset","Manager","recognizeWith","dropRecognizeWith","requireFailure","dropRequireFailure","hasRequireFailures","canRecognizeWith","event","additionalEvent","tryEmit","canEmit","inputDataClone","reset","attrTest","optionPointers","isRecognized","isValid","threshold","directionTest","hasMoved","inOut","validPointers","validMovement","validTime","taps","interval","posThreshold","validTouchTime","failTimeout","validInterval","validMultiTap","tapCount","VERSION","domEvents","inputClass","cssProps","userSelect","touchSelect","touchCallout","contentZooming","userDrag","tapHighlightColor","handlers","oldCssProps","createInputInstance","toggleCssProps","item","stop","force","stopped","curRecognizer","existing","remove","events","data","gestureEvent","createEvent","initEvent","gesture","dispatchEvent","triggerDomEvent","STATE_FAILED","Tap","Pan","Swipe","Pinch","Rotate","Press"],"mappings":"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","file":"2.bundle.js","sourcesContent":["// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvar formatRegExp = /%[sdj%]/g;\nexports.format = function(f) {\n  if (!isString(f)) {\n    var objects = [];\n    for (var i = 0; i < arguments.length; i++) {\n      objects.push(inspect(arguments[i]));\n    }\n    return objects.join(' ');\n  }\n\n  var i = 1;\n  var args = arguments;\n  var len = args.length;\n  var str = String(f).replace(formatRegExp, function(x) {\n    if (x === '%%') return '%';\n    if (i >= len) return x;\n    switch (x) {\n      case '%s': return String(args[i++]);\n      case '%d': return Number(args[i++]);\n      case '%j':\n        try {\n          return JSON.stringify(args[i++]);\n        } catch (_) {\n          return '[Circular]';\n        }\n      default:\n        return x;\n    }\n  });\n  for (var x = args[i]; i < len; x = args[++i]) {\n    if (isNull(x) || !isObject(x)) {\n      str += ' ' + x;\n    } else {\n      str += ' ' + inspect(x);\n    }\n  }\n  return str;\n};\n\n\n// Mark that a method should not be used.\n// Returns a modified function which warns once by default.\n// If --no-deprecation is set, then it is a no-op.\nexports.deprecate = function(fn, msg) {\n  // Allow for deprecating things in the process of starting up.\n  if (isUndefined(global.process)) {\n    return function() {\n      return exports.deprecate(fn, msg).apply(this, arguments);\n    };\n  }\n\n  if (process.noDeprecation === true) {\n    return fn;\n  }\n\n  var warned = false;\n  function deprecated() {\n    if (!warned) {\n      if (process.throwDeprecation) {\n        throw new Error(msg);\n      } else if (process.traceDeprecation) {\n        console.trace(msg);\n      } else {\n        console.error(msg);\n      }\n      warned = true;\n    }\n    return fn.apply(this, arguments);\n  }\n\n  return deprecated;\n};\n\n\nvar debugs = {};\nvar debugEnviron;\nexports.debuglog = function(set) {\n  if (isUndefined(debugEnviron))\n    debugEnviron = process.env.NODE_DEBUG || '';\n  set = set.toUpperCase();\n  if (!debugs[set]) {\n    if (new RegExp('\\\\b' + set + '\\\\b', 'i').test(debugEnviron)) {\n      var pid = process.pid;\n      debugs[set] = function() {\n        var msg = exports.format.apply(exports, arguments);\n        console.error('%s %d: %s', set, pid, msg);\n      };\n    } else {\n      debugs[set] = function() {};\n    }\n  }\n  return debugs[set];\n};\n\n\n/**\n * Echos the value of a value. Trys to print the value out\n * in the best way possible given the different types.\n *\n * @param {Object} obj The object to print out.\n * @param {Object} opts Optional options object that alters the output.\n */\n/* legacy: obj, showHidden, depth, colors*/\nfunction inspect(obj, opts) {\n  // default options\n  var ctx = {\n    seen: [],\n    stylize: stylizeNoColor\n  };\n  // legacy...\n  if (arguments.length >= 3) ctx.depth = arguments[2];\n  if (arguments.length >= 4) ctx.colors = arguments[3];\n  if (isBoolean(opts)) {\n    // legacy...\n    ctx.showHidden = opts;\n  } else if (opts) {\n    // got an \"options\" object\n    exports._extend(ctx, opts);\n  }\n  // set default options\n  if (isUndefined(ctx.showHidden)) ctx.showHidden = false;\n  if (isUndefined(ctx.depth)) ctx.depth = 2;\n  if (isUndefined(ctx.colors)) ctx.colors = false;\n  if (isUndefined(ctx.customInspect)) ctx.customInspect = true;\n  if (ctx.colors) ctx.stylize = stylizeWithColor;\n  return formatValue(ctx, obj, ctx.depth);\n}\nexports.inspect = inspect;\n\n\n// http://en.wikipedia.org/wiki/ANSI_escape_code#graphics\ninspect.colors = {\n  'bold' : [1, 22],\n  'italic' : [3, 23],\n  'underline' : [4, 24],\n  'inverse' : [7, 27],\n  'white' : [37, 39],\n  'grey' : [90, 39],\n  'black' : [30, 39],\n  'blue' : [34, 39],\n  'cyan' : [36, 39],\n  'green' : [32, 39],\n  'magenta' : [35, 39],\n  'red' : [31, 39],\n  'yellow' : [33, 39]\n};\n\n// Don't use 'blue' not visible on cmd.exe\ninspect.styles = {\n  'special': 'cyan',\n  'number': 'yellow',\n  'boolean': 'yellow',\n  'undefined': 'grey',\n  'null': 'bold',\n  'string': 'green',\n  'date': 'magenta',\n  // \"name\": intentionally not styling\n  'regexp': 'red'\n};\n\n\nfunction stylizeWithColor(str, styleType) {\n  var style = inspect.styles[styleType];\n\n  if (style) {\n    return '\\u001b[' + inspect.colors[style][0] + 'm' + str +\n           '\\u001b[' + inspect.colors[style][1] + 'm';\n  } else {\n    return str;\n  }\n}\n\n\nfunction stylizeNoColor(str, styleType) {\n  return str;\n}\n\n\nfunction arrayToHash(array) {\n  var hash = {};\n\n  array.forEach(function(val, idx) {\n    hash[val] = true;\n  });\n\n  return hash;\n}\n\n\nfunction formatValue(ctx, value, recurseTimes) {\n  // Provide a hook for user-specified inspect functions.\n  // Check that value is an object with an inspect function on it\n  if (ctx.customInspect &&\n      value &&\n      isFunction(value.inspect) &&\n      // Filter out the util module, it's inspect function is special\n      value.inspect !== exports.inspect &&\n      // Also filter out any prototype objects using the circular check.\n      !(value.constructor && value.constructor.prototype === value)) {\n    var ret = value.inspect(recurseTimes, ctx);\n    if (!isString(ret)) {\n      ret = formatValue(ctx, ret, recurseTimes);\n    }\n    return ret;\n  }\n\n  // Primitive types cannot have properties\n  var primitive = formatPrimitive(ctx, value);\n  if (primitive) {\n    return primitive;\n  }\n\n  // Look up the keys of the object.\n  var keys = Object.keys(value);\n  var visibleKeys = arrayToHash(keys);\n\n  if (ctx.showHidden) {\n    keys = Object.getOwnPropertyNames(value);\n  }\n\n  // IE doesn't make error fields non-enumerable\n  // http://msdn.microsoft.com/en-us/library/ie/dww52sbt(v=vs.94).aspx\n  if (isError(value)\n      && (keys.indexOf('message') >= 0 || keys.indexOf('description') >= 0)) {\n    return formatError(value);\n  }\n\n  // Some type of object without properties can be shortcutted.\n  if (keys.length === 0) {\n    if (isFunction(value)) {\n      var name = value.name ? ': ' + value.name : '';\n      return ctx.stylize('[Function' + name + ']', 'special');\n    }\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    }\n    if (isDate(value)) {\n      return ctx.stylize(Date.prototype.toString.call(value), 'date');\n    }\n    if (isError(value)) {\n      return formatError(value);\n    }\n  }\n\n  var base = '', array = false, braces = ['{', '}'];\n\n  // Make Array say that they are Array\n  if (isArray(value)) {\n    array = true;\n    braces = ['[', ']'];\n  }\n\n  // Make functions say that they are functions\n  if (isFunction(value)) {\n    var n = value.name ? ': ' + value.name : '';\n    base = ' [Function' + n + ']';\n  }\n\n  // Make RegExps say that they are RegExps\n  if (isRegExp(value)) {\n    base = ' ' + RegExp.prototype.toString.call(value);\n  }\n\n  // Make dates with properties first say the date\n  if (isDate(value)) {\n    base = ' ' + Date.prototype.toUTCString.call(value);\n  }\n\n  // Make error with message first say the error\n  if (isError(value)) {\n    base = ' ' + formatError(value);\n  }\n\n  if (keys.length === 0 && (!array || value.length == 0)) {\n    return braces[0] + base + braces[1];\n  }\n\n  if (recurseTimes < 0) {\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    } else {\n      return ctx.stylize('[Object]', 'special');\n    }\n  }\n\n  ctx.seen.push(value);\n\n  var output;\n  if (array) {\n    output = formatArray(ctx, value, recurseTimes, visibleKeys, keys);\n  } else {\n    output = keys.map(function(key) {\n      return formatProperty(ctx, value, recurseTimes, visibleKeys, key, array);\n    });\n  }\n\n  ctx.seen.pop();\n\n  return reduceToSingleString(output, base, braces);\n}\n\n\nfunction formatPrimitive(ctx, value) {\n  if (isUndefined(value))\n    return ctx.stylize('undefined', 'undefined');\n  if (isString(value)) {\n    var simple = '\\'' + JSON.stringify(value).replace(/^\"|\"$/g, '')\n                                             .replace(/'/g, \"\\\\'\")\n                                             .replace(/\\\\\"/g, '\"') + '\\'';\n    return ctx.stylize(simple, 'string');\n  }\n  if (isNumber(value))\n    return ctx.stylize('' + value, 'number');\n  if (isBoolean(value))\n    return ctx.stylize('' + value, 'boolean');\n  // For some reason typeof null is \"object\", so special case here.\n  if (isNull(value))\n    return ctx.stylize('null', 'null');\n}\n\n\nfunction formatError(value) {\n  return '[' + Error.prototype.toString.call(value) + ']';\n}\n\n\nfunction formatArray(ctx, value, recurseTimes, visibleKeys, keys) {\n  var output = [];\n  for (var i = 0, l = value.length; i < l; ++i) {\n    if (hasOwnProperty(value, String(i))) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          String(i), true));\n    } else {\n      output.push('');\n    }\n  }\n  keys.forEach(function(key) {\n    if (!key.match(/^\\d+$/)) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          key, true));\n    }\n  });\n  return output;\n}\n\n\nfunction formatProperty(ctx, value, recurseTimes, visibleKeys, key, array) {\n  var name, str, desc;\n  desc = Object.getOwnPropertyDescriptor(value, key) || { value: value[key] };\n  if (desc.get) {\n    if (desc.set) {\n      str = ctx.stylize('[Getter/Setter]', 'special');\n    } else {\n      str = ctx.stylize('[Getter]', 'special');\n    }\n  } else {\n    if (desc.set) {\n      str = ctx.stylize('[Setter]', 'special');\n    }\n  }\n  if (!hasOwnProperty(visibleKeys, key)) {\n    name = '[' + key + ']';\n  }\n  if (!str) {\n    if (ctx.seen.indexOf(desc.value) < 0) {\n      if (isNull(recurseTimes)) {\n        str = formatValue(ctx, desc.value, null);\n      } else {\n        str = formatValue(ctx, desc.value, recurseTimes - 1);\n      }\n      if (str.indexOf('\\n') > -1) {\n        if (array) {\n          str = str.split('\\n').map(function(line) {\n            return '  ' + line;\n          }).join('\\n').substr(2);\n        } else {\n          str = '\\n' + str.split('\\n').map(function(line) {\n            return '   ' + line;\n          }).join('\\n');\n        }\n      }\n    } else {\n      str = ctx.stylize('[Circular]', 'special');\n    }\n  }\n  if (isUndefined(name)) {\n    if (array && key.match(/^\\d+$/)) {\n      return str;\n    }\n    name = JSON.stringify('' + key);\n    if (name.match(/^\"([a-zA-Z_][a-zA-Z_0-9]*)\"$/)) {\n      name = name.substr(1, name.length - 2);\n      name = ctx.stylize(name, 'name');\n    } else {\n      name = name.replace(/'/g, \"\\\\'\")\n                 .replace(/\\\\\"/g, '\"')\n                 .replace(/(^\"|\"$)/g, \"'\");\n      name = ctx.stylize(name, 'string');\n    }\n  }\n\n  return name + ': ' + str;\n}\n\n\nfunction reduceToSingleString(output, base, braces) {\n  var numLinesEst = 0;\n  var length = output.reduce(function(prev, cur) {\n    numLinesEst++;\n    if (cur.indexOf('\\n') >= 0) numLinesEst++;\n    return prev + cur.replace(/\\u001b\\[\\d\\d?m/g, '').length + 1;\n  }, 0);\n\n  if (length > 60) {\n    return braces[0] +\n           (base === '' ? '' : base + '\\n ') +\n           ' ' +\n           output.join(',\\n  ') +\n           ' ' +\n           braces[1];\n  }\n\n  return braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1];\n}\n\n\n// NOTE: These type checking functions intentionally don't use `instanceof`\n// because it is fragile and can be easily faked with `Object.create()`.\nfunction isArray(ar) {\n  return Array.isArray(ar);\n}\nexports.isArray = isArray;\n\nfunction isBoolean(arg) {\n  return typeof arg === 'boolean';\n}\nexports.isBoolean = isBoolean;\n\nfunction isNull(arg) {\n  return arg === null;\n}\nexports.isNull = isNull;\n\nfunction isNullOrUndefined(arg) {\n  return arg == null;\n}\nexports.isNullOrUndefined = isNullOrUndefined;\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\nexports.isNumber = isNumber;\n\nfunction isString(arg) {\n  return typeof arg === 'string';\n}\nexports.isString = isString;\n\nfunction isSymbol(arg) {\n  return typeof arg === 'symbol';\n}\nexports.isSymbol = isSymbol;\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\nexports.isUndefined = isUndefined;\n\nfunction isRegExp(re) {\n  return isObject(re) && objectToString(re) === '[object RegExp]';\n}\nexports.isRegExp = isRegExp;\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\nexports.isObject = isObject;\n\nfunction isDate(d) {\n  return isObject(d) && objectToString(d) === '[object Date]';\n}\nexports.isDate = isDate;\n\nfunction isError(e) {\n  return isObject(e) &&\n      (objectToString(e) === '[object Error]' || e instanceof Error);\n}\nexports.isError = isError;\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\nexports.isFunction = isFunction;\n\nfunction isPrimitive(arg) {\n  return arg === null ||\n         typeof arg === 'boolean' ||\n         typeof arg === 'number' ||\n         typeof arg === 'string' ||\n         typeof arg === 'symbol' ||  // ES6 symbol\n         typeof arg === 'undefined';\n}\nexports.isPrimitive = isPrimitive;\n\nexports.isBuffer = require('./support/isBuffer');\n\nfunction objectToString(o) {\n  return Object.prototype.toString.call(o);\n}\n\n\nfunction pad(n) {\n  return n < 10 ? '0' + n.toString(10) : n.toString(10);\n}\n\n\nvar months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep',\n              'Oct', 'Nov', 'Dec'];\n\n// 26 Feb 16:19:34\nfunction timestamp() {\n  var d = new Date();\n  var time = [pad(d.getHours()),\n              pad(d.getMinutes()),\n              pad(d.getSeconds())].join(':');\n  return [d.getDate(), months[d.getMonth()], time].join(' ');\n}\n\n\n// log is just a thin wrapper to console.log that prepends a timestamp\nexports.log = function() {\n  console.log('%s - %s', timestamp(), exports.format.apply(exports, arguments));\n};\n\n\n/**\n * Inherit the prototype methods from one constructor into another.\n *\n * The Function.prototype.inherits from lang.js rewritten as a standalone\n * function (not on Function.prototype). NOTE: If this file is to be loaded\n * during bootstrapping this function needs to be rewritten using some native\n * functions as prototype setup using normal JavaScript does not work as\n * expected during bootstrapping (see mirror.js in r114903).\n *\n * @param {function} ctor Constructor function which needs to inherit the\n *     prototype.\n * @param {function} superCtor Constructor function to inherit prototype from.\n */\nexports.inherits = require('inherits');\n\nexports._extend = function(origin, add) {\n  // Don't do anything if add isn't an object\n  if (!add || !isObject(add)) return origin;\n\n  var keys = Object.keys(add);\n  var i = keys.length;\n  while (i--) {\n    origin[keys[i]] = add[keys[i]];\n  }\n  return origin;\n};\n\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n","var g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1, eval)(\"this\");\r\n} catch (e) {\r\n\t// This works if the window reference is available\r\n\tif (typeof window === \"object\") g = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","module.exports = function isBuffer(arg) {\n  return arg && typeof arg === 'object'\n    && typeof arg.copy === 'function'\n    && typeof arg.fill === 'function'\n    && typeof arg.readUInt8 === 'function';\n}","if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    ctor.prototype = Object.create(superCtor.prototype, {\n      constructor: {\n        value: ctor,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    var TempCtor = function () {}\n    TempCtor.prototype = superCtor.prototype\n    ctor.prototype = new TempCtor()\n    ctor.prototype.constructor = ctor\n  }\n}\n","/*! Hammer.JS - v2.0.7 - 2016-04-22\n * http://hammerjs.github.io/\n *\n * Copyright (c) 2016 Jorik Tangelder;\n * Licensed under the MIT license */\n(function(window, document, exportName, undefined) {\n  'use strict';\n\nvar VENDOR_PREFIXES = ['', 'webkit', 'Moz', 'MS', 'ms', 'o'];\nvar TEST_ELEMENT = document.createElement('div');\n\nvar TYPE_FUNCTION = 'function';\n\nvar round = Math.round;\nvar abs = Math.abs;\nvar now = Date.now;\n\n/**\n * set a timeout with a given scope\n * @param {Function} fn\n * @param {Number} timeout\n * @param {Object} context\n * @returns {number}\n */\nfunction setTimeoutContext(fn, timeout, context) {\n    return setTimeout(bindFn(fn, context), timeout);\n}\n\n/**\n * if the argument is an array, we want to execute the fn on each entry\n * if it aint an array we don't want to do a thing.\n * this is used by all the methods that accept a single and array argument.\n * @param {*|Array} arg\n * @param {String} fn\n * @param {Object} [context]\n * @returns {Boolean}\n */\nfunction invokeArrayArg(arg, fn, context) {\n    if (Array.isArray(arg)) {\n        each(arg, context[fn], context);\n        return true;\n    }\n    return false;\n}\n\n/**\n * walk objects and arrays\n * @param {Object} obj\n * @param {Function} iterator\n * @param {Object} context\n */\nfunction each(obj, iterator, context) {\n    var i;\n\n    if (!obj) {\n        return;\n    }\n\n    if (obj.forEach) {\n        obj.forEach(iterator, context);\n    } else if (obj.length !== undefined) {\n        i = 0;\n        while (i < obj.length) {\n            iterator.call(context, obj[i], i, obj);\n            i++;\n        }\n    } else {\n        for (i in obj) {\n            obj.hasOwnProperty(i) && iterator.call(context, obj[i], i, obj);\n        }\n    }\n}\n\n/**\n * wrap a method with a deprecation warning and stack trace\n * @param {Function} method\n * @param {String} name\n * @param {String} message\n * @returns {Function} A new function wrapping the supplied method.\n */\nfunction deprecate(method, name, message) {\n    var deprecationMessage = 'DEPRECATED METHOD: ' + name + '\\n' + message + ' AT \\n';\n    return function() {\n        var e = new Error('get-stack-trace');\n        var stack = e && e.stack ? e.stack.replace(/^[^\\(]+?[\\n$]/gm, '')\n            .replace(/^\\s+at\\s+/gm, '')\n            .replace(/^Object.<anonymous>\\s*\\(/gm, '{anonymous}()@') : 'Unknown Stack Trace';\n\n        var log = window.console && (window.console.warn || window.console.log);\n        if (log) {\n            log.call(window.console, deprecationMessage, stack);\n        }\n        return method.apply(this, arguments);\n    };\n}\n\n/**\n * extend object.\n * means that properties in dest will be overwritten by the ones in src.\n * @param {Object} target\n * @param {...Object} objects_to_assign\n * @returns {Object} target\n */\nvar assign;\nif (typeof Object.assign !== 'function') {\n    assign = function assign(target) {\n        if (target === undefined || target === null) {\n            throw new TypeError('Cannot convert undefined or null to object');\n        }\n\n        var output = Object(target);\n        for (var index = 1; index < arguments.length; index++) {\n            var source = arguments[index];\n            if (source !== undefined && source !== null) {\n                for (var nextKey in source) {\n                    if (source.hasOwnProperty(nextKey)) {\n                        output[nextKey] = source[nextKey];\n                    }\n                }\n            }\n        }\n        return output;\n    };\n} else {\n    assign = Object.assign;\n}\n\n/**\n * extend object.\n * means that properties in dest will be overwritten by the ones in src.\n * @param {Object} dest\n * @param {Object} src\n * @param {Boolean} [merge=false]\n * @returns {Object} dest\n */\nvar extend = deprecate(function extend(dest, src, merge) {\n    var keys = Object.keys(src);\n    var i = 0;\n    while (i < keys.length) {\n        if (!merge || (merge && dest[keys[i]] === undefined)) {\n            dest[keys[i]] = src[keys[i]];\n        }\n        i++;\n    }\n    return dest;\n}, 'extend', 'Use `assign`.');\n\n/**\n * merge the values from src in the dest.\n * means that properties that exist in dest will not be overwritten by src\n * @param {Object} dest\n * @param {Object} src\n * @returns {Object} dest\n */\nvar merge = deprecate(function merge(dest, src) {\n    return extend(dest, src, true);\n}, 'merge', 'Use `assign`.');\n\n/**\n * simple class inheritance\n * @param {Function} child\n * @param {Function} base\n * @param {Object} [properties]\n */\nfunction inherit(child, base, properties) {\n    var baseP = base.prototype,\n        childP;\n\n    childP = child.prototype = Object.create(baseP);\n    childP.constructor = child;\n    childP._super = baseP;\n\n    if (properties) {\n        assign(childP, properties);\n    }\n}\n\n/**\n * simple function bind\n * @param {Function} fn\n * @param {Object} context\n * @returns {Function}\n */\nfunction bindFn(fn, context) {\n    return function boundFn() {\n        return fn.apply(context, arguments);\n    };\n}\n\n/**\n * let a boolean value also be a function that must return a boolean\n * this first item in args will be used as the context\n * @param {Boolean|Function} val\n * @param {Array} [args]\n * @returns {Boolean}\n */\nfunction boolOrFn(val, args) {\n    if (typeof val == TYPE_FUNCTION) {\n        return val.apply(args ? args[0] || undefined : undefined, args);\n    }\n    return val;\n}\n\n/**\n * use the val2 when val1 is undefined\n * @param {*} val1\n * @param {*} val2\n * @returns {*}\n */\nfunction ifUndefined(val1, val2) {\n    return (val1 === undefined) ? val2 : val1;\n}\n\n/**\n * addEventListener with multiple events at once\n * @param {EventTarget} target\n * @param {String} types\n * @param {Function} handler\n */\nfunction addEventListeners(target, types, handler) {\n    each(splitStr(types), function(type) {\n        target.addEventListener(type, handler, false);\n    });\n}\n\n/**\n * removeEventListener with multiple events at once\n * @param {EventTarget} target\n * @param {String} types\n * @param {Function} handler\n */\nfunction removeEventListeners(target, types, handler) {\n    each(splitStr(types), function(type) {\n        target.removeEventListener(type, handler, false);\n    });\n}\n\n/**\n * find if a node is in the given parent\n * @method hasParent\n * @param {HTMLElement} node\n * @param {HTMLElement} parent\n * @return {Boolean} found\n */\nfunction hasParent(node, parent) {\n    while (node) {\n        if (node == parent) {\n            return true;\n        }\n        node = node.parentNode;\n    }\n    return false;\n}\n\n/**\n * small indexOf wrapper\n * @param {String} str\n * @param {String} find\n * @returns {Boolean} found\n */\nfunction inStr(str, find) {\n    return str.indexOf(find) > -1;\n}\n\n/**\n * split string on whitespace\n * @param {String} str\n * @returns {Array} words\n */\nfunction splitStr(str) {\n    return str.trim().split(/\\s+/g);\n}\n\n/**\n * find if a array contains the object using indexOf or a simple polyFill\n * @param {Array} src\n * @param {String} find\n * @param {String} [findByKey]\n * @return {Boolean|Number} false when not found, or the index\n */\nfunction inArray(src, find, findByKey) {\n    if (src.indexOf && !findByKey) {\n        return src.indexOf(find);\n    } else {\n        var i = 0;\n        while (i < src.length) {\n            if ((findByKey && src[i][findByKey] == find) || (!findByKey && src[i] === find)) {\n                return i;\n            }\n            i++;\n        }\n        return -1;\n    }\n}\n\n/**\n * convert array-like objects to real arrays\n * @param {Object} obj\n * @returns {Array}\n */\nfunction toArray(obj) {\n    return Array.prototype.slice.call(obj, 0);\n}\n\n/**\n * unique array with objects based on a key (like 'id') or just by the array's value\n * @param {Array} src [{id:1},{id:2},{id:1}]\n * @param {String} [key]\n * @param {Boolean} [sort=False]\n * @returns {Array} [{id:1},{id:2}]\n */\nfunction uniqueArray(src, key, sort) {\n    var results = [];\n    var values = [];\n    var i = 0;\n\n    while (i < src.length) {\n        var val = key ? src[i][key] : src[i];\n        if (inArray(values, val) < 0) {\n            results.push(src[i]);\n        }\n        values[i] = val;\n        i++;\n    }\n\n    if (sort) {\n        if (!key) {\n            results = results.sort();\n        } else {\n            results = results.sort(function sortUniqueArray(a, b) {\n                return a[key] > b[key];\n            });\n        }\n    }\n\n    return results;\n}\n\n/**\n * get the prefixed property\n * @param {Object} obj\n * @param {String} property\n * @returns {String|Undefined} prefixed\n */\nfunction prefixed(obj, property) {\n    var prefix, prop;\n    var camelProp = property[0].toUpperCase() + property.slice(1);\n\n    var i = 0;\n    while (i < VENDOR_PREFIXES.length) {\n        prefix = VENDOR_PREFIXES[i];\n        prop = (prefix) ? prefix + camelProp : property;\n\n        if (prop in obj) {\n            return prop;\n        }\n        i++;\n    }\n    return undefined;\n}\n\n/**\n * get a unique id\n * @returns {number} uniqueId\n */\nvar _uniqueId = 1;\nfunction uniqueId() {\n    return _uniqueId++;\n}\n\n/**\n * get the window object of an element\n * @param {HTMLElement} element\n * @returns {DocumentView|Window}\n */\nfunction getWindowForElement(element) {\n    var doc = element.ownerDocument || element;\n    return (doc.defaultView || doc.parentWindow || window);\n}\n\nvar MOBILE_REGEX = /mobile|tablet|ip(ad|hone|od)|android/i;\n\nvar SUPPORT_TOUCH = ('ontouchstart' in window);\nvar SUPPORT_POINTER_EVENTS = prefixed(window, 'PointerEvent') !== undefined;\nvar SUPPORT_ONLY_TOUCH = SUPPORT_TOUCH && MOBILE_REGEX.test(navigator.userAgent);\n\nvar INPUT_TYPE_TOUCH = 'touch';\nvar INPUT_TYPE_PEN = 'pen';\nvar INPUT_TYPE_MOUSE = 'mouse';\nvar INPUT_TYPE_KINECT = 'kinect';\n\nvar COMPUTE_INTERVAL = 25;\n\nvar INPUT_START = 1;\nvar INPUT_MOVE = 2;\nvar INPUT_END = 4;\nvar INPUT_CANCEL = 8;\n\nvar DIRECTION_NONE = 1;\nvar DIRECTION_LEFT = 2;\nvar DIRECTION_RIGHT = 4;\nvar DIRECTION_UP = 8;\nvar DIRECTION_DOWN = 16;\n\nvar DIRECTION_HORIZONTAL = DIRECTION_LEFT | DIRECTION_RIGHT;\nvar DIRECTION_VERTICAL = DIRECTION_UP | DIRECTION_DOWN;\nvar DIRECTION_ALL = DIRECTION_HORIZONTAL | DIRECTION_VERTICAL;\n\nvar PROPS_XY = ['x', 'y'];\nvar PROPS_CLIENT_XY = ['clientX', 'clientY'];\n\n/**\n * create new input type manager\n * @param {Manager} manager\n * @param {Function} callback\n * @returns {Input}\n * @constructor\n */\nfunction Input(manager, callback) {\n    var self = this;\n    this.manager = manager;\n    this.callback = callback;\n    this.element = manager.element;\n    this.target = manager.options.inputTarget;\n\n    // smaller wrapper around the handler, for the scope and the enabled state of the manager,\n    // so when disabled the input events are completely bypassed.\n    this.domHandler = function(ev) {\n        if (boolOrFn(manager.options.enable, [manager])) {\n            self.handler(ev);\n        }\n    };\n\n    this.init();\n\n}\n\nInput.prototype = {\n    /**\n     * should handle the inputEvent data and trigger the callback\n     * @virtual\n     */\n    handler: function() { },\n\n    /**\n     * bind the events\n     */\n    init: function() {\n        this.evEl && addEventListeners(this.element, this.evEl, this.domHandler);\n        this.evTarget && addEventListeners(this.target, this.evTarget, this.domHandler);\n        this.evWin && addEventListeners(getWindowForElement(this.element), this.evWin, this.domHandler);\n    },\n\n    /**\n     * unbind the events\n     */\n    destroy: function() {\n        this.evEl && removeEventListeners(this.element, this.evEl, this.domHandler);\n        this.evTarget && removeEventListeners(this.target, this.evTarget, this.domHandler);\n        this.evWin && removeEventListeners(getWindowForElement(this.element), this.evWin, this.domHandler);\n    }\n};\n\n/**\n * create new input type manager\n * called by the Manager constructor\n * @param {Hammer} manager\n * @returns {Input}\n */\nfunction createInputInstance(manager) {\n    var Type;\n    var inputClass = manager.options.inputClass;\n\n    if (inputClass) {\n        Type = inputClass;\n    } else if (SUPPORT_POINTER_EVENTS) {\n        Type = PointerEventInput;\n    } else if (SUPPORT_ONLY_TOUCH) {\n        Type = TouchInput;\n    } else if (!SUPPORT_TOUCH) {\n        Type = MouseInput;\n    } else {\n        Type = TouchMouseInput;\n    }\n    return new (Type)(manager, inputHandler);\n}\n\n/**\n * handle input events\n * @param {Manager} manager\n * @param {String} eventType\n * @param {Object} input\n */\nfunction inputHandler(manager, eventType, input) {\n    var pointersLen = input.pointers.length;\n    var changedPointersLen = input.changedPointers.length;\n    var isFirst = (eventType & INPUT_START && (pointersLen - changedPointersLen === 0));\n    var isFinal = (eventType & (INPUT_END | INPUT_CANCEL) && (pointersLen - changedPointersLen === 0));\n\n    input.isFirst = !!isFirst;\n    input.isFinal = !!isFinal;\n\n    if (isFirst) {\n        manager.session = {};\n    }\n\n    // source event is the normalized value of the domEvents\n    // like 'touchstart, mouseup, pointerdown'\n    input.eventType = eventType;\n\n    // compute scale, rotation etc\n    computeInputData(manager, input);\n\n    // emit secret event\n    manager.emit('hammer.input', input);\n\n    manager.recognize(input);\n    manager.session.prevInput = input;\n}\n\n/**\n * extend the data with some usable properties like scale, rotate, velocity etc\n * @param {Object} manager\n * @param {Object} input\n */\nfunction computeInputData(manager, input) {\n    var session = manager.session;\n    var pointers = input.pointers;\n    var pointersLength = pointers.length;\n\n    // store the first input to calculate the distance and direction\n    if (!session.firstInput) {\n        session.firstInput = simpleCloneInputData(input);\n    }\n\n    // to compute scale and rotation we need to store the multiple touches\n    if (pointersLength > 1 && !session.firstMultiple) {\n        session.firstMultiple = simpleCloneInputData(input);\n    } else if (pointersLength === 1) {\n        session.firstMultiple = false;\n    }\n\n    var firstInput = session.firstInput;\n    var firstMultiple = session.firstMultiple;\n    var offsetCenter = firstMultiple ? firstMultiple.center : firstInput.center;\n\n    var center = input.center = getCenter(pointers);\n    input.timeStamp = now();\n    input.deltaTime = input.timeStamp - firstInput.timeStamp;\n\n    input.angle = getAngle(offsetCenter, center);\n    input.distance = getDistance(offsetCenter, center);\n\n    computeDeltaXY(session, input);\n    input.offsetDirection = getDirection(input.deltaX, input.deltaY);\n\n    var overallVelocity = getVelocity(input.deltaTime, input.deltaX, input.deltaY);\n    input.overallVelocityX = overallVelocity.x;\n    input.overallVelocityY = overallVelocity.y;\n    input.overallVelocity = (abs(overallVelocity.x) > abs(overallVelocity.y)) ? overallVelocity.x : overallVelocity.y;\n\n    input.scale = firstMultiple ? getScale(firstMultiple.pointers, pointers) : 1;\n    input.rotation = firstMultiple ? getRotation(firstMultiple.pointers, pointers) : 0;\n\n    input.maxPointers = !session.prevInput ? input.pointers.length : ((input.pointers.length >\n        session.prevInput.maxPointers) ? input.pointers.length : session.prevInput.maxPointers);\n\n    computeIntervalInputData(session, input);\n\n    // find the correct target\n    var target = manager.element;\n    if (hasParent(input.srcEvent.target, target)) {\n        target = input.srcEvent.target;\n    }\n    input.target = target;\n}\n\nfunction computeDeltaXY(session, input) {\n    var center = input.center;\n    var offset = session.offsetDelta || {};\n    var prevDelta = session.prevDelta || {};\n    var prevInput = session.prevInput || {};\n\n    if (input.eventType === INPUT_START || prevInput.eventType === INPUT_END) {\n        prevDelta = session.prevDelta = {\n            x: prevInput.deltaX || 0,\n            y: prevInput.deltaY || 0\n        };\n\n        offset = session.offsetDelta = {\n            x: center.x,\n            y: center.y\n        };\n    }\n\n    input.deltaX = prevDelta.x + (center.x - offset.x);\n    input.deltaY = prevDelta.y + (center.y - offset.y);\n}\n\n/**\n * velocity is calculated every x ms\n * @param {Object} session\n * @param {Object} input\n */\nfunction computeIntervalInputData(session, input) {\n    var last = session.lastInterval || input,\n        deltaTime = input.timeStamp - last.timeStamp,\n        velocity, velocityX, velocityY, direction;\n\n    if (input.eventType != INPUT_CANCEL && (deltaTime > COMPUTE_INTERVAL || last.velocity === undefined)) {\n        var deltaX = input.deltaX - last.deltaX;\n        var deltaY = input.deltaY - last.deltaY;\n\n        var v = getVelocity(deltaTime, deltaX, deltaY);\n        velocityX = v.x;\n        velocityY = v.y;\n        velocity = (abs(v.x) > abs(v.y)) ? v.x : v.y;\n        direction = getDirection(deltaX, deltaY);\n\n        session.lastInterval = input;\n    } else {\n        // use latest velocity info if it doesn't overtake a minimum period\n        velocity = last.velocity;\n        velocityX = last.velocityX;\n        velocityY = last.velocityY;\n        direction = last.direction;\n    }\n\n    input.velocity = velocity;\n    input.velocityX = velocityX;\n    input.velocityY = velocityY;\n    input.direction = direction;\n}\n\n/**\n * create a simple clone from the input used for storage of firstInput and firstMultiple\n * @param {Object} input\n * @returns {Object} clonedInputData\n */\nfunction simpleCloneInputData(input) {\n    // make a simple copy of the pointers because we will get a reference if we don't\n    // we only need clientXY for the calculations\n    var pointers = [];\n    var i = 0;\n    while (i < input.pointers.length) {\n        pointers[i] = {\n            clientX: round(input.pointers[i].clientX),\n            clientY: round(input.pointers[i].clientY)\n        };\n        i++;\n    }\n\n    return {\n        timeStamp: now(),\n        pointers: pointers,\n        center: getCenter(pointers),\n        deltaX: input.deltaX,\n        deltaY: input.deltaY\n    };\n}\n\n/**\n * get the center of all the pointers\n * @param {Array} pointers\n * @return {Object} center contains `x` and `y` properties\n */\nfunction getCenter(pointers) {\n    var pointersLength = pointers.length;\n\n    // no need to loop when only one touch\n    if (pointersLength === 1) {\n        return {\n            x: round(pointers[0].clientX),\n            y: round(pointers[0].clientY)\n        };\n    }\n\n    var x = 0, y = 0, i = 0;\n    while (i < pointersLength) {\n        x += pointers[i].clientX;\n        y += pointers[i].clientY;\n        i++;\n    }\n\n    return {\n        x: round(x / pointersLength),\n        y: round(y / pointersLength)\n    };\n}\n\n/**\n * calculate the velocity between two points. unit is in px per ms.\n * @param {Number} deltaTime\n * @param {Number} x\n * @param {Number} y\n * @return {Object} velocity `x` and `y`\n */\nfunction getVelocity(deltaTime, x, y) {\n    return {\n        x: x / deltaTime || 0,\n        y: y / deltaTime || 0\n    };\n}\n\n/**\n * get the direction between two points\n * @param {Number} x\n * @param {Number} y\n * @return {Number} direction\n */\nfunction getDirection(x, y) {\n    if (x === y) {\n        return DIRECTION_NONE;\n    }\n\n    if (abs(x) >= abs(y)) {\n        return x < 0 ? DIRECTION_LEFT : DIRECTION_RIGHT;\n    }\n    return y < 0 ? DIRECTION_UP : DIRECTION_DOWN;\n}\n\n/**\n * calculate the absolute distance between two points\n * @param {Object} p1 {x, y}\n * @param {Object} p2 {x, y}\n * @param {Array} [props] containing x and y keys\n * @return {Number} distance\n */\nfunction getDistance(p1, p2, props) {\n    if (!props) {\n        props = PROPS_XY;\n    }\n    var x = p2[props[0]] - p1[props[0]],\n        y = p2[props[1]] - p1[props[1]];\n\n    return Math.sqrt((x * x) + (y * y));\n}\n\n/**\n * calculate the angle between two coordinates\n * @param {Object} p1\n * @param {Object} p2\n * @param {Array} [props] containing x and y keys\n * @return {Number} angle\n */\nfunction getAngle(p1, p2, props) {\n    if (!props) {\n        props = PROPS_XY;\n    }\n    var x = p2[props[0]] - p1[props[0]],\n        y = p2[props[1]] - p1[props[1]];\n    return Math.atan2(y, x) * 180 / Math.PI;\n}\n\n/**\n * calculate the rotation degrees between two pointersets\n * @param {Array} start array of pointers\n * @param {Array} end array of pointers\n * @return {Number} rotation\n */\nfunction getRotation(start, end) {\n    return getAngle(end[1], end[0], PROPS_CLIENT_XY) + getAngle(start[1], start[0], PROPS_CLIENT_XY);\n}\n\n/**\n * calculate the scale factor between two pointersets\n * no scale is 1, and goes down to 0 when pinched together, and bigger when pinched out\n * @param {Array} start array of pointers\n * @param {Array} end array of pointers\n * @return {Number} scale\n */\nfunction getScale(start, end) {\n    return getDistance(end[0], end[1], PROPS_CLIENT_XY) / getDistance(start[0], start[1], PROPS_CLIENT_XY);\n}\n\nvar MOUSE_INPUT_MAP = {\n    mousedown: INPUT_START,\n    mousemove: INPUT_MOVE,\n    mouseup: INPUT_END\n};\n\nvar MOUSE_ELEMENT_EVENTS = 'mousedown';\nvar MOUSE_WINDOW_EVENTS = 'mousemove mouseup';\n\n/**\n * Mouse events input\n * @constructor\n * @extends Input\n */\nfunction MouseInput() {\n    this.evEl = MOUSE_ELEMENT_EVENTS;\n    this.evWin = MOUSE_WINDOW_EVENTS;\n\n    this.pressed = false; // mousedown state\n\n    Input.apply(this, arguments);\n}\n\ninherit(MouseInput, Input, {\n    /**\n     * handle mouse events\n     * @param {Object} ev\n     */\n    handler: function MEhandler(ev) {\n        var eventType = MOUSE_INPUT_MAP[ev.type];\n\n        // on start we want to have the left mouse button down\n        if (eventType & INPUT_START && ev.button === 0) {\n            this.pressed = true;\n        }\n\n        if (eventType & INPUT_MOVE && ev.which !== 1) {\n            eventType = INPUT_END;\n        }\n\n        // mouse must be down\n        if (!this.pressed) {\n            return;\n        }\n\n        if (eventType & INPUT_END) {\n            this.pressed = false;\n        }\n\n        this.callback(this.manager, eventType, {\n            pointers: [ev],\n            changedPointers: [ev],\n            pointerType: INPUT_TYPE_MOUSE,\n            srcEvent: ev\n        });\n    }\n});\n\nvar POINTER_INPUT_MAP = {\n    pointerdown: INPUT_START,\n    pointermove: INPUT_MOVE,\n    pointerup: INPUT_END,\n    pointercancel: INPUT_CANCEL,\n    pointerout: INPUT_CANCEL\n};\n\n// in IE10 the pointer types is defined as an enum\nvar IE10_POINTER_TYPE_ENUM = {\n    2: INPUT_TYPE_TOUCH,\n    3: INPUT_TYPE_PEN,\n    4: INPUT_TYPE_MOUSE,\n    5: INPUT_TYPE_KINECT // see https://twitter.com/jacobrossi/status/480596438489890816\n};\n\nvar POINTER_ELEMENT_EVENTS = 'pointerdown';\nvar POINTER_WINDOW_EVENTS = 'pointermove pointerup pointercancel';\n\n// IE10 has prefixed support, and case-sensitive\nif (window.MSPointerEvent && !window.PointerEvent) {\n    POINTER_ELEMENT_EVENTS = 'MSPointerDown';\n    POINTER_WINDOW_EVENTS = 'MSPointerMove MSPointerUp MSPointerCancel';\n}\n\n/**\n * Pointer events input\n * @constructor\n * @extends Input\n */\nfunction PointerEventInput() {\n    this.evEl = POINTER_ELEMENT_EVENTS;\n    this.evWin = POINTER_WINDOW_EVENTS;\n\n    Input.apply(this, arguments);\n\n    this.store = (this.manager.session.pointerEvents = []);\n}\n\ninherit(PointerEventInput, Input, {\n    /**\n     * handle mouse events\n     * @param {Object} ev\n     */\n    handler: function PEhandler(ev) {\n        var store = this.store;\n        var removePointer = false;\n\n        var eventTypeNormalized = ev.type.toLowerCase().replace('ms', '');\n        var eventType = POINTER_INPUT_MAP[eventTypeNormalized];\n        var pointerType = IE10_POINTER_TYPE_ENUM[ev.pointerType] || ev.pointerType;\n\n        var isTouch = (pointerType == INPUT_TYPE_TOUCH);\n\n        // get index of the event in the store\n        var storeIndex = inArray(store, ev.pointerId, 'pointerId');\n\n        // start and mouse must be down\n        if (eventType & INPUT_START && (ev.button === 0 || isTouch)) {\n            if (storeIndex < 0) {\n                store.push(ev);\n                storeIndex = store.length - 1;\n            }\n        } else if (eventType & (INPUT_END | INPUT_CANCEL)) {\n            removePointer = true;\n        }\n\n        // it not found, so the pointer hasn't been down (so it's probably a hover)\n        if (storeIndex < 0) {\n            return;\n        }\n\n        // update the event in the store\n        store[storeIndex] = ev;\n\n        this.callback(this.manager, eventType, {\n            pointers: store,\n            changedPointers: [ev],\n            pointerType: pointerType,\n            srcEvent: ev\n        });\n\n        if (removePointer) {\n            // remove from the store\n            store.splice(storeIndex, 1);\n        }\n    }\n});\n\nvar SINGLE_TOUCH_INPUT_MAP = {\n    touchstart: INPUT_START,\n    touchmove: INPUT_MOVE,\n    touchend: INPUT_END,\n    touchcancel: INPUT_CANCEL\n};\n\nvar SINGLE_TOUCH_TARGET_EVENTS = 'touchstart';\nvar SINGLE_TOUCH_WINDOW_EVENTS = 'touchstart touchmove touchend touchcancel';\n\n/**\n * Touch events input\n * @constructor\n * @extends Input\n */\nfunction SingleTouchInput() {\n    this.evTarget = SINGLE_TOUCH_TARGET_EVENTS;\n    this.evWin = SINGLE_TOUCH_WINDOW_EVENTS;\n    this.started = false;\n\n    Input.apply(this, arguments);\n}\n\ninherit(SingleTouchInput, Input, {\n    handler: function TEhandler(ev) {\n        var type = SINGLE_TOUCH_INPUT_MAP[ev.type];\n\n        // should we handle the touch events?\n        if (type === INPUT_START) {\n            this.started = true;\n        }\n\n        if (!this.started) {\n            return;\n        }\n\n        var touches = normalizeSingleTouches.call(this, ev, type);\n\n        // when done, reset the started state\n        if (type & (INPUT_END | INPUT_CANCEL) && touches[0].length - touches[1].length === 0) {\n            this.started = false;\n        }\n\n        this.callback(this.manager, type, {\n            pointers: touches[0],\n            changedPointers: touches[1],\n            pointerType: INPUT_TYPE_TOUCH,\n            srcEvent: ev\n        });\n    }\n});\n\n/**\n * @this {TouchInput}\n * @param {Object} ev\n * @param {Number} type flag\n * @returns {undefined|Array} [all, changed]\n */\nfunction normalizeSingleTouches(ev, type) {\n    var all = toArray(ev.touches);\n    var changed = toArray(ev.changedTouches);\n\n    if (type & (INPUT_END | INPUT_CANCEL)) {\n        all = uniqueArray(all.concat(changed), 'identifier', true);\n    }\n\n    return [all, changed];\n}\n\nvar TOUCH_INPUT_MAP = {\n    touchstart: INPUT_START,\n    touchmove: INPUT_MOVE,\n    touchend: INPUT_END,\n    touchcancel: INPUT_CANCEL\n};\n\nvar TOUCH_TARGET_EVENTS = 'touchstart touchmove touchend touchcancel';\n\n/**\n * Multi-user touch events input\n * @constructor\n * @extends Input\n */\nfunction TouchInput() {\n    this.evTarget = TOUCH_TARGET_EVENTS;\n    this.targetIds = {};\n\n    Input.apply(this, arguments);\n}\n\ninherit(TouchInput, Input, {\n    handler: function MTEhandler(ev) {\n        var type = TOUCH_INPUT_MAP[ev.type];\n        var touches = getTouches.call(this, ev, type);\n        if (!touches) {\n            return;\n        }\n\n        this.callback(this.manager, type, {\n            pointers: touches[0],\n            changedPointers: touches[1],\n            pointerType: INPUT_TYPE_TOUCH,\n            srcEvent: ev\n        });\n    }\n});\n\n/**\n * @this {TouchInput}\n * @param {Object} ev\n * @param {Number} type flag\n * @returns {undefined|Array} [all, changed]\n */\nfunction getTouches(ev, type) {\n    var allTouches = toArray(ev.touches);\n    var targetIds = this.targetIds;\n\n    // when there is only one touch, the process can be simplified\n    if (type & (INPUT_START | INPUT_MOVE) && allTouches.length === 1) {\n        targetIds[allTouches[0].identifier] = true;\n        return [allTouches, allTouches];\n    }\n\n    var i,\n        targetTouches,\n        changedTouches = toArray(ev.changedTouches),\n        changedTargetTouches = [],\n        target = this.target;\n\n    // get target touches from touches\n    targetTouches = allTouches.filter(function(touch) {\n        return hasParent(touch.target, target);\n    });\n\n    // collect touches\n    if (type === INPUT_START) {\n        i = 0;\n        while (i < targetTouches.length) {\n            targetIds[targetTouches[i].identifier] = true;\n            i++;\n        }\n    }\n\n    // filter changed touches to only contain touches that exist in the collected target ids\n    i = 0;\n    while (i < changedTouches.length) {\n        if (targetIds[changedTouches[i].identifier]) {\n            changedTargetTouches.push(changedTouches[i]);\n        }\n\n        // cleanup removed touches\n        if (type & (INPUT_END | INPUT_CANCEL)) {\n            delete targetIds[changedTouches[i].identifier];\n        }\n        i++;\n    }\n\n    if (!changedTargetTouches.length) {\n        return;\n    }\n\n    return [\n        // merge targetTouches with changedTargetTouches so it contains ALL touches, including 'end' and 'cancel'\n        uniqueArray(targetTouches.concat(changedTargetTouches), 'identifier', true),\n        changedTargetTouches\n    ];\n}\n\n/**\n * Combined touch and mouse input\n *\n * Touch has a higher priority then mouse, and while touching no mouse events are allowed.\n * This because touch devices also emit mouse events while doing a touch.\n *\n * @constructor\n * @extends Input\n */\n\nvar DEDUP_TIMEOUT = 2500;\nvar DEDUP_DISTANCE = 25;\n\nfunction TouchMouseInput() {\n    Input.apply(this, arguments);\n\n    var handler = bindFn(this.handler, this);\n    this.touch = new TouchInput(this.manager, handler);\n    this.mouse = new MouseInput(this.manager, handler);\n\n    this.primaryTouch = null;\n    this.lastTouches = [];\n}\n\ninherit(TouchMouseInput, Input, {\n    /**\n     * handle mouse and touch events\n     * @param {Hammer} manager\n     * @param {String} inputEvent\n     * @param {Object} inputData\n     */\n    handler: function TMEhandler(manager, inputEvent, inputData) {\n        var isTouch = (inputData.pointerType == INPUT_TYPE_TOUCH),\n            isMouse = (inputData.pointerType == INPUT_TYPE_MOUSE);\n\n        if (isMouse && inputData.sourceCapabilities && inputData.sourceCapabilities.firesTouchEvents) {\n            return;\n        }\n\n        // when we're in a touch event, record touches to  de-dupe synthetic mouse event\n        if (isTouch) {\n            recordTouches.call(this, inputEvent, inputData);\n        } else if (isMouse && isSyntheticEvent.call(this, inputData)) {\n            return;\n        }\n\n        this.callback(manager, inputEvent, inputData);\n    },\n\n    /**\n     * remove the event listeners\n     */\n    destroy: function destroy() {\n        this.touch.destroy();\n        this.mouse.destroy();\n    }\n});\n\nfunction recordTouches(eventType, eventData) {\n    if (eventType & INPUT_START) {\n        this.primaryTouch = eventData.changedPointers[0].identifier;\n        setLastTouch.call(this, eventData);\n    } else if (eventType & (INPUT_END | INPUT_CANCEL)) {\n        setLastTouch.call(this, eventData);\n    }\n}\n\nfunction setLastTouch(eventData) {\n    var touch = eventData.changedPointers[0];\n\n    if (touch.identifier === this.primaryTouch) {\n        var lastTouch = {x: touch.clientX, y: touch.clientY};\n        this.lastTouches.push(lastTouch);\n        var lts = this.lastTouches;\n        var removeLastTouch = function() {\n            var i = lts.indexOf(lastTouch);\n            if (i > -1) {\n                lts.splice(i, 1);\n            }\n        };\n        setTimeout(removeLastTouch, DEDUP_TIMEOUT);\n    }\n}\n\nfunction isSyntheticEvent(eventData) {\n    var x = eventData.srcEvent.clientX, y = eventData.srcEvent.clientY;\n    for (var i = 0; i < this.lastTouches.length; i++) {\n        var t = this.lastTouches[i];\n        var dx = Math.abs(x - t.x), dy = Math.abs(y - t.y);\n        if (dx <= DEDUP_DISTANCE && dy <= DEDUP_DISTANCE) {\n            return true;\n        }\n    }\n    return false;\n}\n\nvar PREFIXED_TOUCH_ACTION = prefixed(TEST_ELEMENT.style, 'touchAction');\nvar NATIVE_TOUCH_ACTION = PREFIXED_TOUCH_ACTION !== undefined;\n\n// magical touchAction value\nvar TOUCH_ACTION_COMPUTE = 'compute';\nvar TOUCH_ACTION_AUTO = 'auto';\nvar TOUCH_ACTION_MANIPULATION = 'manipulation'; // not implemented\nvar TOUCH_ACTION_NONE = 'none';\nvar TOUCH_ACTION_PAN_X = 'pan-x';\nvar TOUCH_ACTION_PAN_Y = 'pan-y';\nvar TOUCH_ACTION_MAP = getTouchActionProps();\n\n/**\n * Touch Action\n * sets the touchAction property or uses the js alternative\n * @param {Manager} manager\n * @param {String} value\n * @constructor\n */\nfunction TouchAction(manager, value) {\n    this.manager = manager;\n    this.set(value);\n}\n\nTouchAction.prototype = {\n    /**\n     * set the touchAction value on the element or enable the polyfill\n     * @param {String} value\n     */\n    set: function(value) {\n        // find out the touch-action by the event handlers\n        if (value == TOUCH_ACTION_COMPUTE) {\n            value = this.compute();\n        }\n\n        if (NATIVE_TOUCH_ACTION && this.manager.element.style && TOUCH_ACTION_MAP[value]) {\n            this.manager.element.style[PREFIXED_TOUCH_ACTION] = value;\n        }\n        this.actions = value.toLowerCase().trim();\n    },\n\n    /**\n     * just re-set the touchAction value\n     */\n    update: function() {\n        this.set(this.manager.options.touchAction);\n    },\n\n    /**\n     * compute the value for the touchAction property based on the recognizer's settings\n     * @returns {String} value\n     */\n    compute: function() {\n        var actions = [];\n        each(this.manager.recognizers, function(recognizer) {\n            if (boolOrFn(recognizer.options.enable, [recognizer])) {\n                actions = actions.concat(recognizer.getTouchAction());\n            }\n        });\n        return cleanTouchActions(actions.join(' '));\n    },\n\n    /**\n     * this method is called on each input cycle and provides the preventing of the browser behavior\n     * @param {Object} input\n     */\n    preventDefaults: function(input) {\n        var srcEvent = input.srcEvent;\n        var direction = input.offsetDirection;\n\n        // if the touch action did prevented once this session\n        if (this.manager.session.prevented) {\n            srcEvent.preventDefault();\n            return;\n        }\n\n        var actions = this.actions;\n        var hasNone = inStr(actions, TOUCH_ACTION_NONE) && !TOUCH_ACTION_MAP[TOUCH_ACTION_NONE];\n        var hasPanY = inStr(actions, TOUCH_ACTION_PAN_Y) && !TOUCH_ACTION_MAP[TOUCH_ACTION_PAN_Y];\n        var hasPanX = inStr(actions, TOUCH_ACTION_PAN_X) && !TOUCH_ACTION_MAP[TOUCH_ACTION_PAN_X];\n\n        if (hasNone) {\n            //do not prevent defaults if this is a tap gesture\n\n            var isTapPointer = input.pointers.length === 1;\n            var isTapMovement = input.distance < 2;\n            var isTapTouchTime = input.deltaTime < 250;\n\n            if (isTapPointer && isTapMovement && isTapTouchTime) {\n                return;\n            }\n        }\n\n        if (hasPanX && hasPanY) {\n            // `pan-x pan-y` means browser handles all scrolling/panning, do not prevent\n            return;\n        }\n\n        if (hasNone ||\n            (hasPanY && direction & DIRECTION_HORIZONTAL) ||\n            (hasPanX && direction & DIRECTION_VERTICAL)) {\n            return this.preventSrc(srcEvent);\n        }\n    },\n\n    /**\n     * call preventDefault to prevent the browser's default behavior (scrolling in most cases)\n     * @param {Object} srcEvent\n     */\n    preventSrc: function(srcEvent) {\n        this.manager.session.prevented = true;\n        srcEvent.preventDefault();\n    }\n};\n\n/**\n * when the touchActions are collected they are not a valid value, so we need to clean things up. *\n * @param {String} actions\n * @returns {*}\n */\nfunction cleanTouchActions(actions) {\n    // none\n    if (inStr(actions, TOUCH_ACTION_NONE)) {\n        return TOUCH_ACTION_NONE;\n    }\n\n    var hasPanX = inStr(actions, TOUCH_ACTION_PAN_X);\n    var hasPanY = inStr(actions, TOUCH_ACTION_PAN_Y);\n\n    // if both pan-x and pan-y are set (different recognizers\n    // for different directions, e.g. horizontal pan but vertical swipe?)\n    // we need none (as otherwise with pan-x pan-y combined none of these\n    // recognizers will work, since the browser would handle all panning\n    if (hasPanX && hasPanY) {\n        return TOUCH_ACTION_NONE;\n    }\n\n    // pan-x OR pan-y\n    if (hasPanX || hasPanY) {\n        return hasPanX ? TOUCH_ACTION_PAN_X : TOUCH_ACTION_PAN_Y;\n    }\n\n    // manipulation\n    if (inStr(actions, TOUCH_ACTION_MANIPULATION)) {\n        return TOUCH_ACTION_MANIPULATION;\n    }\n\n    return TOUCH_ACTION_AUTO;\n}\n\nfunction getTouchActionProps() {\n    if (!NATIVE_TOUCH_ACTION) {\n        return false;\n    }\n    var touchMap = {};\n    var cssSupports = window.CSS && window.CSS.supports;\n    ['auto', 'manipulation', 'pan-y', 'pan-x', 'pan-x pan-y', 'none'].forEach(function(val) {\n\n        // If css.supports is not supported but there is native touch-action assume it supports\n        // all values. This is the case for IE 10 and 11.\n        touchMap[val] = cssSupports ? window.CSS.supports('touch-action', val) : true;\n    });\n    return touchMap;\n}\n\n/**\n * Recognizer flow explained; *\n * All recognizers have the initial state of POSSIBLE when a input session starts.\n * The definition of a input session is from the first input until the last input, with all it's movement in it. *\n * Example session for mouse-input: mousedown -> mousemove -> mouseup\n *\n * On each recognizing cycle (see Manager.recognize) the .recognize() method is executed\n * which determines with state it should be.\n *\n * If the recognizer has the state FAILED, CANCELLED or RECOGNIZED (equals ENDED), it is reset to\n * POSSIBLE to give it another change on the next cycle.\n *\n *               Possible\n *                  |\n *            +-----+---------------+\n *            |                     |\n *      +-----+-----+               |\n *      |           |               |\n *   Failed      Cancelled          |\n *                          +-------+------+\n *                          |              |\n *                      Recognized       Began\n *                                         |\n *                                      Changed\n *                                         |\n *                                  Ended/Recognized\n */\nvar STATE_POSSIBLE = 1;\nvar STATE_BEGAN = 2;\nvar STATE_CHANGED = 4;\nvar STATE_ENDED = 8;\nvar STATE_RECOGNIZED = STATE_ENDED;\nvar STATE_CANCELLED = 16;\nvar STATE_FAILED = 32;\n\n/**\n * Recognizer\n * Every recognizer needs to extend from this class.\n * @constructor\n * @param {Object} options\n */\nfunction Recognizer(options) {\n    this.options = assign({}, this.defaults, options || {});\n\n    this.id = uniqueId();\n\n    this.manager = null;\n\n    // default is enable true\n    this.options.enable = ifUndefined(this.options.enable, true);\n\n    this.state = STATE_POSSIBLE;\n\n    this.simultaneous = {};\n    this.requireFail = [];\n}\n\nRecognizer.prototype = {\n    /**\n     * @virtual\n     * @type {Object}\n     */\n    defaults: {},\n\n    /**\n     * set options\n     * @param {Object} options\n     * @return {Recognizer}\n     */\n    set: function(options) {\n        assign(this.options, options);\n\n        // also update the touchAction, in case something changed about the directions/enabled state\n        this.manager && this.manager.touchAction.update();\n        return this;\n    },\n\n    /**\n     * recognize simultaneous with an other recognizer.\n     * @param {Recognizer} otherRecognizer\n     * @returns {Recognizer} this\n     */\n    recognizeWith: function(otherRecognizer) {\n        if (invokeArrayArg(otherRecognizer, 'recognizeWith', this)) {\n            return this;\n        }\n\n        var simultaneous = this.simultaneous;\n        otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n        if (!simultaneous[otherRecognizer.id]) {\n            simultaneous[otherRecognizer.id] = otherRecognizer;\n            otherRecognizer.recognizeWith(this);\n        }\n        return this;\n    },\n\n    /**\n     * drop the simultaneous link. it doesnt remove the link on the other recognizer.\n     * @param {Recognizer} otherRecognizer\n     * @returns {Recognizer} this\n     */\n    dropRecognizeWith: function(otherRecognizer) {\n        if (invokeArrayArg(otherRecognizer, 'dropRecognizeWith', this)) {\n            return this;\n        }\n\n        otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n        delete this.simultaneous[otherRecognizer.id];\n        return this;\n    },\n\n    /**\n     * recognizer can only run when an other is failing\n     * @param {Recognizer} otherRecognizer\n     * @returns {Recognizer} this\n     */\n    requireFailure: function(otherRecognizer) {\n        if (invokeArrayArg(otherRecognizer, 'requireFailure', this)) {\n            return this;\n        }\n\n        var requireFail = this.requireFail;\n        otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n        if (inArray(requireFail, otherRecognizer) === -1) {\n            requireFail.push(otherRecognizer);\n            otherRecognizer.requireFailure(this);\n        }\n        return this;\n    },\n\n    /**\n     * drop the requireFailure link. it does not remove the link on the other recognizer.\n     * @param {Recognizer} otherRecognizer\n     * @returns {Recognizer} this\n     */\n    dropRequireFailure: function(otherRecognizer) {\n        if (invokeArrayArg(otherRecognizer, 'dropRequireFailure', this)) {\n            return this;\n        }\n\n        otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n        var index = inArray(this.requireFail, otherRecognizer);\n        if (index > -1) {\n            this.requireFail.splice(index, 1);\n        }\n        return this;\n    },\n\n    /**\n     * has require failures boolean\n     * @returns {boolean}\n     */\n    hasRequireFailures: function() {\n        return this.requireFail.length > 0;\n    },\n\n    /**\n     * if the recognizer can recognize simultaneous with an other recognizer\n     * @param {Recognizer} otherRecognizer\n     * @returns {Boolean}\n     */\n    canRecognizeWith: function(otherRecognizer) {\n        return !!this.simultaneous[otherRecognizer.id];\n    },\n\n    /**\n     * You should use `tryEmit` instead of `emit` directly to check\n     * that all the needed recognizers has failed before emitting.\n     * @param {Object} input\n     */\n    emit: function(input) {\n        var self = this;\n        var state = this.state;\n\n        function emit(event) {\n            self.manager.emit(event, input);\n        }\n\n        // 'panstart' and 'panmove'\n        if (state < STATE_ENDED) {\n            emit(self.options.event + stateStr(state));\n        }\n\n        emit(self.options.event); // simple 'eventName' events\n\n        if (input.additionalEvent) { // additional event(panleft, panright, pinchin, pinchout...)\n            emit(input.additionalEvent);\n        }\n\n        // panend and pancancel\n        if (state >= STATE_ENDED) {\n            emit(self.options.event + stateStr(state));\n        }\n    },\n\n    /**\n     * Check that all the require failure recognizers has failed,\n     * if true, it emits a gesture event,\n     * otherwise, setup the state to FAILED.\n     * @param {Object} input\n     */\n    tryEmit: function(input) {\n        if (this.canEmit()) {\n            return this.emit(input);\n        }\n        // it's failing anyway\n        this.state = STATE_FAILED;\n    },\n\n    /**\n     * can we emit?\n     * @returns {boolean}\n     */\n    canEmit: function() {\n        var i = 0;\n        while (i < this.requireFail.length) {\n            if (!(this.requireFail[i].state & (STATE_FAILED | STATE_POSSIBLE))) {\n                return false;\n            }\n            i++;\n        }\n        return true;\n    },\n\n    /**\n     * update the recognizer\n     * @param {Object} inputData\n     */\n    recognize: function(inputData) {\n        // make a new copy of the inputData\n        // so we can change the inputData without messing up the other recognizers\n        var inputDataClone = assign({}, inputData);\n\n        // is is enabled and allow recognizing?\n        if (!boolOrFn(this.options.enable, [this, inputDataClone])) {\n            this.reset();\n            this.state = STATE_FAILED;\n            return;\n        }\n\n        // reset when we've reached the end\n        if (this.state & (STATE_RECOGNIZED | STATE_CANCELLED | STATE_FAILED)) {\n            this.state = STATE_POSSIBLE;\n        }\n\n        this.state = this.process(inputDataClone);\n\n        // the recognizer has recognized a gesture\n        // so trigger an event\n        if (this.state & (STATE_BEGAN | STATE_CHANGED | STATE_ENDED | STATE_CANCELLED)) {\n            this.tryEmit(inputDataClone);\n        }\n    },\n\n    /**\n     * return the state of the recognizer\n     * the actual recognizing happens in this method\n     * @virtual\n     * @param {Object} inputData\n     * @returns {Const} STATE\n     */\n    process: function(inputData) { }, // jshint ignore:line\n\n    /**\n     * return the preferred touch-action\n     * @virtual\n     * @returns {Array}\n     */\n    getTouchAction: function() { },\n\n    /**\n     * called when the gesture isn't allowed to recognize\n     * like when another is being recognized or it is disabled\n     * @virtual\n     */\n    reset: function() { }\n};\n\n/**\n * get a usable string, used as event postfix\n * @param {Const} state\n * @returns {String} state\n */\nfunction stateStr(state) {\n    if (state & STATE_CANCELLED) {\n        return 'cancel';\n    } else if (state & STATE_ENDED) {\n        return 'end';\n    } else if (state & STATE_CHANGED) {\n        return 'move';\n    } else if (state & STATE_BEGAN) {\n        return 'start';\n    }\n    return '';\n}\n\n/**\n * direction cons to string\n * @param {Const} direction\n * @returns {String}\n */\nfunction directionStr(direction) {\n    if (direction == DIRECTION_DOWN) {\n        return 'down';\n    } else if (direction == DIRECTION_UP) {\n        return 'up';\n    } else if (direction == DIRECTION_LEFT) {\n        return 'left';\n    } else if (direction == DIRECTION_RIGHT) {\n        return 'right';\n    }\n    return '';\n}\n\n/**\n * get a recognizer by name if it is bound to a manager\n * @param {Recognizer|String} otherRecognizer\n * @param {Recognizer} recognizer\n * @returns {Recognizer}\n */\nfunction getRecognizerByNameIfManager(otherRecognizer, recognizer) {\n    var manager = recognizer.manager;\n    if (manager) {\n        return manager.get(otherRecognizer);\n    }\n    return otherRecognizer;\n}\n\n/**\n * This recognizer is just used as a base for the simple attribute recognizers.\n * @constructor\n * @extends Recognizer\n */\nfunction AttrRecognizer() {\n    Recognizer.apply(this, arguments);\n}\n\ninherit(AttrRecognizer, Recognizer, {\n    /**\n     * @namespace\n     * @memberof AttrRecognizer\n     */\n    defaults: {\n        /**\n         * @type {Number}\n         * @default 1\n         */\n        pointers: 1\n    },\n\n    /**\n     * Used to check if it the recognizer receives valid input, like input.distance > 10.\n     * @memberof AttrRecognizer\n     * @param {Object} input\n     * @returns {Boolean} recognized\n     */\n    attrTest: function(input) {\n        var optionPointers = this.options.pointers;\n        return optionPointers === 0 || input.pointers.length === optionPointers;\n    },\n\n    /**\n     * Process the input and return the state for the recognizer\n     * @memberof AttrRecognizer\n     * @param {Object} input\n     * @returns {*} State\n     */\n    process: function(input) {\n        var state = this.state;\n        var eventType = input.eventType;\n\n        var isRecognized = state & (STATE_BEGAN | STATE_CHANGED);\n        var isValid = this.attrTest(input);\n\n        // on cancel input and we've recognized before, return STATE_CANCELLED\n        if (isRecognized && (eventType & INPUT_CANCEL || !isValid)) {\n            return state | STATE_CANCELLED;\n        } else if (isRecognized || isValid) {\n            if (eventType & INPUT_END) {\n                return state | STATE_ENDED;\n            } else if (!(state & STATE_BEGAN)) {\n                return STATE_BEGAN;\n            }\n            return state | STATE_CHANGED;\n        }\n        return STATE_FAILED;\n    }\n});\n\n/**\n * Pan\n * Recognized when the pointer is down and moved in the allowed direction.\n * @constructor\n * @extends AttrRecognizer\n */\nfunction PanRecognizer() {\n    AttrRecognizer.apply(this, arguments);\n\n    this.pX = null;\n    this.pY = null;\n}\n\ninherit(PanRecognizer, AttrRecognizer, {\n    /**\n     * @namespace\n     * @memberof PanRecognizer\n     */\n    defaults: {\n        event: 'pan',\n        threshold: 10,\n        pointers: 1,\n        direction: DIRECTION_ALL\n    },\n\n    getTouchAction: function() {\n        var direction = this.options.direction;\n        var actions = [];\n        if (direction & DIRECTION_HORIZONTAL) {\n            actions.push(TOUCH_ACTION_PAN_Y);\n        }\n        if (direction & DIRECTION_VERTICAL) {\n            actions.push(TOUCH_ACTION_PAN_X);\n        }\n        return actions;\n    },\n\n    directionTest: function(input) {\n        var options = this.options;\n        var hasMoved = true;\n        var distance = input.distance;\n        var direction = input.direction;\n        var x = input.deltaX;\n        var y = input.deltaY;\n\n        // lock to axis?\n        if (!(direction & options.direction)) {\n            if (options.direction & DIRECTION_HORIZONTAL) {\n                direction = (x === 0) ? DIRECTION_NONE : (x < 0) ? DIRECTION_LEFT : DIRECTION_RIGHT;\n                hasMoved = x != this.pX;\n                distance = Math.abs(input.deltaX);\n            } else {\n                direction = (y === 0) ? DIRECTION_NONE : (y < 0) ? DIRECTION_UP : DIRECTION_DOWN;\n                hasMoved = y != this.pY;\n                distance = Math.abs(input.deltaY);\n            }\n        }\n        input.direction = direction;\n        return hasMoved && distance > options.threshold && direction & options.direction;\n    },\n\n    attrTest: function(input) {\n        return AttrRecognizer.prototype.attrTest.call(this, input) &&\n            (this.state & STATE_BEGAN || (!(this.state & STATE_BEGAN) && this.directionTest(input)));\n    },\n\n    emit: function(input) {\n\n        this.pX = input.deltaX;\n        this.pY = input.deltaY;\n\n        var direction = directionStr(input.direction);\n\n        if (direction) {\n            input.additionalEvent = this.options.event + direction;\n        }\n        this._super.emit.call(this, input);\n    }\n});\n\n/**\n * Pinch\n * Recognized when two or more pointers are moving toward (zoom-in) or away from each other (zoom-out).\n * @constructor\n * @extends AttrRecognizer\n */\nfunction PinchRecognizer() {\n    AttrRecognizer.apply(this, arguments);\n}\n\ninherit(PinchRecognizer, AttrRecognizer, {\n    /**\n     * @namespace\n     * @memberof PinchRecognizer\n     */\n    defaults: {\n        event: 'pinch',\n        threshold: 0,\n        pointers: 2\n    },\n\n    getTouchAction: function() {\n        return [TOUCH_ACTION_NONE];\n    },\n\n    attrTest: function(input) {\n        return this._super.attrTest.call(this, input) &&\n            (Math.abs(input.scale - 1) > this.options.threshold || this.state & STATE_BEGAN);\n    },\n\n    emit: function(input) {\n        if (input.scale !== 1) {\n            var inOut = input.scale < 1 ? 'in' : 'out';\n            input.additionalEvent = this.options.event + inOut;\n        }\n        this._super.emit.call(this, input);\n    }\n});\n\n/**\n * Press\n * Recognized when the pointer is down for x ms without any movement.\n * @constructor\n * @extends Recognizer\n */\nfunction PressRecognizer() {\n    Recognizer.apply(this, arguments);\n\n    this._timer = null;\n    this._input = null;\n}\n\ninherit(PressRecognizer, Recognizer, {\n    /**\n     * @namespace\n     * @memberof PressRecognizer\n     */\n    defaults: {\n        event: 'press',\n        pointers: 1,\n        time: 251, // minimal time of the pointer to be pressed\n        threshold: 9 // a minimal movement is ok, but keep it low\n    },\n\n    getTouchAction: function() {\n        return [TOUCH_ACTION_AUTO];\n    },\n\n    process: function(input) {\n        var options = this.options;\n        var validPointers = input.pointers.length === options.pointers;\n        var validMovement = input.distance < options.threshold;\n        var validTime = input.deltaTime > options.time;\n\n        this._input = input;\n\n        // we only allow little movement\n        // and we've reached an end event, so a tap is possible\n        if (!validMovement || !validPointers || (input.eventType & (INPUT_END | INPUT_CANCEL) && !validTime)) {\n            this.reset();\n        } else if (input.eventType & INPUT_START) {\n            this.reset();\n            this._timer = setTimeoutContext(function() {\n                this.state = STATE_RECOGNIZED;\n                this.tryEmit();\n            }, options.time, this);\n        } else if (input.eventType & INPUT_END) {\n            return STATE_RECOGNIZED;\n        }\n        return STATE_FAILED;\n    },\n\n    reset: function() {\n        clearTimeout(this._timer);\n    },\n\n    emit: function(input) {\n        if (this.state !== STATE_RECOGNIZED) {\n            return;\n        }\n\n        if (input && (input.eventType & INPUT_END)) {\n            this.manager.emit(this.options.event + 'up', input);\n        } else {\n            this._input.timeStamp = now();\n            this.manager.emit(this.options.event, this._input);\n        }\n    }\n});\n\n/**\n * Rotate\n * Recognized when two or more pointer are moving in a circular motion.\n * @constructor\n * @extends AttrRecognizer\n */\nfunction RotateRecognizer() {\n    AttrRecognizer.apply(this, arguments);\n}\n\ninherit(RotateRecognizer, AttrRecognizer, {\n    /**\n     * @namespace\n     * @memberof RotateRecognizer\n     */\n    defaults: {\n        event: 'rotate',\n        threshold: 0,\n        pointers: 2\n    },\n\n    getTouchAction: function() {\n        return [TOUCH_ACTION_NONE];\n    },\n\n    attrTest: function(input) {\n        return this._super.attrTest.call(this, input) &&\n            (Math.abs(input.rotation) > this.options.threshold || this.state & STATE_BEGAN);\n    }\n});\n\n/**\n * Swipe\n * Recognized when the pointer is moving fast (velocity), with enough distance in the allowed direction.\n * @constructor\n * @extends AttrRecognizer\n */\nfunction SwipeRecognizer() {\n    AttrRecognizer.apply(this, arguments);\n}\n\ninherit(SwipeRecognizer, AttrRecognizer, {\n    /**\n     * @namespace\n     * @memberof SwipeRecognizer\n     */\n    defaults: {\n        event: 'swipe',\n        threshold: 10,\n        velocity: 0.3,\n        direction: DIRECTION_HORIZONTAL | DIRECTION_VERTICAL,\n        pointers: 1\n    },\n\n    getTouchAction: function() {\n        return PanRecognizer.prototype.getTouchAction.call(this);\n    },\n\n    attrTest: function(input) {\n        var direction = this.options.direction;\n        var velocity;\n\n        if (direction & (DIRECTION_HORIZONTAL | DIRECTION_VERTICAL)) {\n            velocity = input.overallVelocity;\n        } else if (direction & DIRECTION_HORIZONTAL) {\n            velocity = input.overallVelocityX;\n        } else if (direction & DIRECTION_VERTICAL) {\n            velocity = input.overallVelocityY;\n        }\n\n        return this._super.attrTest.call(this, input) &&\n            direction & input.offsetDirection &&\n            input.distance > this.options.threshold &&\n            input.maxPointers == this.options.pointers &&\n            abs(velocity) > this.options.velocity && input.eventType & INPUT_END;\n    },\n\n    emit: function(input) {\n        var direction = directionStr(input.offsetDirection);\n        if (direction) {\n            this.manager.emit(this.options.event + direction, input);\n        }\n\n        this.manager.emit(this.options.event, input);\n    }\n});\n\n/**\n * A tap is ecognized when the pointer is doing a small tap/click. Multiple taps are recognized if they occur\n * between the given interval and position. The delay option can be used to recognize multi-taps without firing\n * a single tap.\n *\n * The eventData from the emitted event contains the property `tapCount`, which contains the amount of\n * multi-taps being recognized.\n * @constructor\n * @extends Recognizer\n */\nfunction TapRecognizer() {\n    Recognizer.apply(this, arguments);\n\n    // previous time and center,\n    // used for tap counting\n    this.pTime = false;\n    this.pCenter = false;\n\n    this._timer = null;\n    this._input = null;\n    this.count = 0;\n}\n\ninherit(TapRecognizer, Recognizer, {\n    /**\n     * @namespace\n     * @memberof PinchRecognizer\n     */\n    defaults: {\n        event: 'tap',\n        pointers: 1,\n        taps: 1,\n        interval: 300, // max time between the multi-tap taps\n        time: 250, // max time of the pointer to be down (like finger on the screen)\n        threshold: 9, // a minimal movement is ok, but keep it low\n        posThreshold: 10 // a multi-tap can be a bit off the initial position\n    },\n\n    getTouchAction: function() {\n        return [TOUCH_ACTION_MANIPULATION];\n    },\n\n    process: function(input) {\n        var options = this.options;\n\n        var validPointers = input.pointers.length === options.pointers;\n        var validMovement = input.distance < options.threshold;\n        var validTouchTime = input.deltaTime < options.time;\n\n        this.reset();\n\n        if ((input.eventType & INPUT_START) && (this.count === 0)) {\n            return this.failTimeout();\n        }\n\n        // we only allow little movement\n        // and we've reached an end event, so a tap is possible\n        if (validMovement && validTouchTime && validPointers) {\n            if (input.eventType != INPUT_END) {\n                return this.failTimeout();\n            }\n\n            var validInterval = this.pTime ? (input.timeStamp - this.pTime < options.interval) : true;\n            var validMultiTap = !this.pCenter || getDistance(this.pCenter, input.center) < options.posThreshold;\n\n            this.pTime = input.timeStamp;\n            this.pCenter = input.center;\n\n            if (!validMultiTap || !validInterval) {\n                this.count = 1;\n            } else {\n                this.count += 1;\n            }\n\n            this._input = input;\n\n            // if tap count matches we have recognized it,\n            // else it has began recognizing...\n            var tapCount = this.count % options.taps;\n            if (tapCount === 0) {\n                // no failing requirements, immediately trigger the tap event\n                // or wait as long as the multitap interval to trigger\n                if (!this.hasRequireFailures()) {\n                    return STATE_RECOGNIZED;\n                } else {\n                    this._timer = setTimeoutContext(function() {\n                        this.state = STATE_RECOGNIZED;\n                        this.tryEmit();\n                    }, options.interval, this);\n                    return STATE_BEGAN;\n                }\n            }\n        }\n        return STATE_FAILED;\n    },\n\n    failTimeout: function() {\n        this._timer = setTimeoutContext(function() {\n            this.state = STATE_FAILED;\n        }, this.options.interval, this);\n        return STATE_FAILED;\n    },\n\n    reset: function() {\n        clearTimeout(this._timer);\n    },\n\n    emit: function() {\n        if (this.state == STATE_RECOGNIZED) {\n            this._input.tapCount = this.count;\n            this.manager.emit(this.options.event, this._input);\n        }\n    }\n});\n\n/**\n * Simple way to create a manager with a default set of recognizers.\n * @param {HTMLElement} element\n * @param {Object} [options]\n * @constructor\n */\nfunction Hammer(element, options) {\n    options = options || {};\n    options.recognizers = ifUndefined(options.recognizers, Hammer.defaults.preset);\n    return new Manager(element, options);\n}\n\n/**\n * @const {string}\n */\nHammer.VERSION = '2.0.7';\n\n/**\n * default settings\n * @namespace\n */\nHammer.defaults = {\n    /**\n     * set if DOM events are being triggered.\n     * But this is slower and unused by simple implementations, so disabled by default.\n     * @type {Boolean}\n     * @default false\n     */\n    domEvents: false,\n\n    /**\n     * The value for the touchAction property/fallback.\n     * When set to `compute` it will magically set the correct value based on the added recognizers.\n     * @type {String}\n     * @default compute\n     */\n    touchAction: TOUCH_ACTION_COMPUTE,\n\n    /**\n     * @type {Boolean}\n     * @default true\n     */\n    enable: true,\n\n    /**\n     * EXPERIMENTAL FEATURE -- can be removed/changed\n     * Change the parent input target element.\n     * If Null, then it is being set the to main element.\n     * @type {Null|EventTarget}\n     * @default null\n     */\n    inputTarget: null,\n\n    /**\n     * force an input class\n     * @type {Null|Function}\n     * @default null\n     */\n    inputClass: null,\n\n    /**\n     * Default recognizer setup when calling `Hammer()`\n     * When creating a new Manager these will be skipped.\n     * @type {Array}\n     */\n    preset: [\n        // RecognizerClass, options, [recognizeWith, ...], [requireFailure, ...]\n        [RotateRecognizer, {enable: false}],\n        [PinchRecognizer, {enable: false}, ['rotate']],\n        [SwipeRecognizer, {direction: DIRECTION_HORIZONTAL}],\n        [PanRecognizer, {direction: DIRECTION_HORIZONTAL}, ['swipe']],\n        [TapRecognizer],\n        [TapRecognizer, {event: 'doubletap', taps: 2}, ['tap']],\n        [PressRecognizer]\n    ],\n\n    /**\n     * Some CSS properties can be used to improve the working of Hammer.\n     * Add them to this method and they will be set when creating a new Manager.\n     * @namespace\n     */\n    cssProps: {\n        /**\n         * Disables text selection to improve the dragging gesture. Mainly for desktop browsers.\n         * @type {String}\n         * @default 'none'\n         */\n        userSelect: 'none',\n\n        /**\n         * Disable the Windows Phone grippers when pressing an element.\n         * @type {String}\n         * @default 'none'\n         */\n        touchSelect: 'none',\n\n        /**\n         * Disables the default callout shown when you touch and hold a touch target.\n         * On iOS, when you touch and hold a touch target such as a link, Safari displays\n         * a callout containing information about the link. This property allows you to disable that callout.\n         * @type {String}\n         * @default 'none'\n         */\n        touchCallout: 'none',\n\n        /**\n         * Specifies whether zooming is enabled. Used by IE10>\n         * @type {String}\n         * @default 'none'\n         */\n        contentZooming: 'none',\n\n        /**\n         * Specifies that an entire element should be draggable instead of its contents. Mainly for desktop browsers.\n         * @type {String}\n         * @default 'none'\n         */\n        userDrag: 'none',\n\n        /**\n         * Overrides the highlight color shown when the user taps a link or a JavaScript\n         * clickable element in iOS. This property obeys the alpha value, if specified.\n         * @type {String}\n         * @default 'rgba(0,0,0,0)'\n         */\n        tapHighlightColor: 'rgba(0,0,0,0)'\n    }\n};\n\nvar STOP = 1;\nvar FORCED_STOP = 2;\n\n/**\n * Manager\n * @param {HTMLElement} element\n * @param {Object} [options]\n * @constructor\n */\nfunction Manager(element, options) {\n    this.options = assign({}, Hammer.defaults, options || {});\n\n    this.options.inputTarget = this.options.inputTarget || element;\n\n    this.handlers = {};\n    this.session = {};\n    this.recognizers = [];\n    this.oldCssProps = {};\n\n    this.element = element;\n    this.input = createInputInstance(this);\n    this.touchAction = new TouchAction(this, this.options.touchAction);\n\n    toggleCssProps(this, true);\n\n    each(this.options.recognizers, function(item) {\n        var recognizer = this.add(new (item[0])(item[1]));\n        item[2] && recognizer.recognizeWith(item[2]);\n        item[3] && recognizer.requireFailure(item[3]);\n    }, this);\n}\n\nManager.prototype = {\n    /**\n     * set options\n     * @param {Object} options\n     * @returns {Manager}\n     */\n    set: function(options) {\n        assign(this.options, options);\n\n        // Options that need a little more setup\n        if (options.touchAction) {\n            this.touchAction.update();\n        }\n        if (options.inputTarget) {\n            // Clean up existing event listeners and reinitialize\n            this.input.destroy();\n            this.input.target = options.inputTarget;\n            this.input.init();\n        }\n        return this;\n    },\n\n    /**\n     * stop recognizing for this session.\n     * This session will be discarded, when a new [input]start event is fired.\n     * When forced, the recognizer cycle is stopped immediately.\n     * @param {Boolean} [force]\n     */\n    stop: function(force) {\n        this.session.stopped = force ? FORCED_STOP : STOP;\n    },\n\n    /**\n     * run the recognizers!\n     * called by the inputHandler function on every movement of the pointers (touches)\n     * it walks through all the recognizers and tries to detect the gesture that is being made\n     * @param {Object} inputData\n     */\n    recognize: function(inputData) {\n        var session = this.session;\n        if (session.stopped) {\n            return;\n        }\n\n        // run the touch-action polyfill\n        this.touchAction.preventDefaults(inputData);\n\n        var recognizer;\n        var recognizers = this.recognizers;\n\n        // this holds the recognizer that is being recognized.\n        // so the recognizer's state needs to be BEGAN, CHANGED, ENDED or RECOGNIZED\n        // if no recognizer is detecting a thing, it is set to `null`\n        var curRecognizer = session.curRecognizer;\n\n        // reset when the last recognizer is recognized\n        // or when we're in a new session\n        if (!curRecognizer || (curRecognizer && curRecognizer.state & STATE_RECOGNIZED)) {\n            curRecognizer = session.curRecognizer = null;\n        }\n\n        var i = 0;\n        while (i < recognizers.length) {\n            recognizer = recognizers[i];\n\n            // find out if we are allowed try to recognize the input for this one.\n            // 1.   allow if the session is NOT forced stopped (see the .stop() method)\n            // 2.   allow if we still haven't recognized a gesture in this session, or the this recognizer is the one\n            //      that is being recognized.\n            // 3.   allow if the recognizer is allowed to run simultaneous with the current recognized recognizer.\n            //      this can be setup with the `recognizeWith()` method on the recognizer.\n            if (session.stopped !== FORCED_STOP && ( // 1\n                    !curRecognizer || recognizer == curRecognizer || // 2\n                    recognizer.canRecognizeWith(curRecognizer))) { // 3\n                recognizer.recognize(inputData);\n            } else {\n                recognizer.reset();\n            }\n\n            // if the recognizer has been recognizing the input as a valid gesture, we want to store this one as the\n            // current active recognizer. but only if we don't already have an active recognizer\n            if (!curRecognizer && recognizer.state & (STATE_BEGAN | STATE_CHANGED | STATE_ENDED)) {\n                curRecognizer = session.curRecognizer = recognizer;\n            }\n            i++;\n        }\n    },\n\n    /**\n     * get a recognizer by its event name.\n     * @param {Recognizer|String} recognizer\n     * @returns {Recognizer|Null}\n     */\n    get: function(recognizer) {\n        if (recognizer instanceof Recognizer) {\n            return recognizer;\n        }\n\n        var recognizers = this.recognizers;\n        for (var i = 0; i < recognizers.length; i++) {\n            if (recognizers[i].options.event == recognizer) {\n                return recognizers[i];\n            }\n        }\n        return null;\n    },\n\n    /**\n     * add a recognizer to the manager\n     * existing recognizers with the same event name will be removed\n     * @param {Recognizer} recognizer\n     * @returns {Recognizer|Manager}\n     */\n    add: function(recognizer) {\n        if (invokeArrayArg(recognizer, 'add', this)) {\n            return this;\n        }\n\n        // remove existing\n        var existing = this.get(recognizer.options.event);\n        if (existing) {\n            this.remove(existing);\n        }\n\n        this.recognizers.push(recognizer);\n        recognizer.manager = this;\n\n        this.touchAction.update();\n        return recognizer;\n    },\n\n    /**\n     * remove a recognizer by name or instance\n     * @param {Recognizer|String} recognizer\n     * @returns {Manager}\n     */\n    remove: function(recognizer) {\n        if (invokeArrayArg(recognizer, 'remove', this)) {\n            return this;\n        }\n\n        recognizer = this.get(recognizer);\n\n        // let's make sure this recognizer exists\n        if (recognizer) {\n            var recognizers = this.recognizers;\n            var index = inArray(recognizers, recognizer);\n\n            if (index !== -1) {\n                recognizers.splice(index, 1);\n                this.touchAction.update();\n            }\n        }\n\n        return this;\n    },\n\n    /**\n     * bind event\n     * @param {String} events\n     * @param {Function} handler\n     * @returns {EventEmitter} this\n     */\n    on: function(events, handler) {\n        if (events === undefined) {\n            return;\n        }\n        if (handler === undefined) {\n            return;\n        }\n\n        var handlers = this.handlers;\n        each(splitStr(events), function(event) {\n            handlers[event] = handlers[event] || [];\n            handlers[event].push(handler);\n        });\n        return this;\n    },\n\n    /**\n     * unbind event, leave emit blank to remove all handlers\n     * @param {String} events\n     * @param {Function} [handler]\n     * @returns {EventEmitter} this\n     */\n    off: function(events, handler) {\n        if (events === undefined) {\n            return;\n        }\n\n        var handlers = this.handlers;\n        each(splitStr(events), function(event) {\n            if (!handler) {\n                delete handlers[event];\n            } else {\n                handlers[event] && handlers[event].splice(inArray(handlers[event], handler), 1);\n            }\n        });\n        return this;\n    },\n\n    /**\n     * emit event to the listeners\n     * @param {String} event\n     * @param {Object} data\n     */\n    emit: function(event, data) {\n        // we also want to trigger dom events\n        if (this.options.domEvents) {\n            triggerDomEvent(event, data);\n        }\n\n        // no handlers, so skip it all\n        var handlers = this.handlers[event] && this.handlers[event].slice();\n        if (!handlers || !handlers.length) {\n            return;\n        }\n\n        data.type = event;\n        data.preventDefault = function() {\n            data.srcEvent.preventDefault();\n        };\n\n        var i = 0;\n        while (i < handlers.length) {\n            handlers[i](data);\n            i++;\n        }\n    },\n\n    /**\n     * destroy the manager and unbinds all events\n     * it doesn't unbind dom events, that is the user own responsibility\n     */\n    destroy: function() {\n        this.element && toggleCssProps(this, false);\n\n        this.handlers = {};\n        this.session = {};\n        this.input.destroy();\n        this.element = null;\n    }\n};\n\n/**\n * add/remove the css properties as defined in manager.options.cssProps\n * @param {Manager} manager\n * @param {Boolean} add\n */\nfunction toggleCssProps(manager, add) {\n    var element = manager.element;\n    if (!element.style) {\n        return;\n    }\n    var prop;\n    each(manager.options.cssProps, function(value, name) {\n        prop = prefixed(element.style, name);\n        if (add) {\n            manager.oldCssProps[prop] = element.style[prop];\n            element.style[prop] = value;\n        } else {\n            element.style[prop] = manager.oldCssProps[prop] || '';\n        }\n    });\n    if (!add) {\n        manager.oldCssProps = {};\n    }\n}\n\n/**\n * trigger dom event\n * @param {String} event\n * @param {Object} data\n */\nfunction triggerDomEvent(event, data) {\n    var gestureEvent = document.createEvent('Event');\n    gestureEvent.initEvent(event, true, true);\n    gestureEvent.gesture = data;\n    data.target.dispatchEvent(gestureEvent);\n}\n\nassign(Hammer, {\n    INPUT_START: INPUT_START,\n    INPUT_MOVE: INPUT_MOVE,\n    INPUT_END: INPUT_END,\n    INPUT_CANCEL: INPUT_CANCEL,\n\n    STATE_POSSIBLE: STATE_POSSIBLE,\n    STATE_BEGAN: STATE_BEGAN,\n    STATE_CHANGED: STATE_CHANGED,\n    STATE_ENDED: STATE_ENDED,\n    STATE_RECOGNIZED: STATE_RECOGNIZED,\n    STATE_CANCELLED: STATE_CANCELLED,\n    STATE_FAILED: STATE_FAILED,\n\n    DIRECTION_NONE: DIRECTION_NONE,\n    DIRECTION_LEFT: DIRECTION_LEFT,\n    DIRECTION_RIGHT: DIRECTION_RIGHT,\n    DIRECTION_UP: DIRECTION_UP,\n    DIRECTION_DOWN: DIRECTION_DOWN,\n    DIRECTION_HORIZONTAL: DIRECTION_HORIZONTAL,\n    DIRECTION_VERTICAL: DIRECTION_VERTICAL,\n    DIRECTION_ALL: DIRECTION_ALL,\n\n    Manager: Manager,\n    Input: Input,\n    TouchAction: TouchAction,\n\n    TouchInput: TouchInput,\n    MouseInput: MouseInput,\n    PointerEventInput: PointerEventInput,\n    TouchMouseInput: TouchMouseInput,\n    SingleTouchInput: SingleTouchInput,\n\n    Recognizer: Recognizer,\n    AttrRecognizer: AttrRecognizer,\n    Tap: TapRecognizer,\n    Pan: PanRecognizer,\n    Swipe: SwipeRecognizer,\n    Pinch: PinchRecognizer,\n    Rotate: RotateRecognizer,\n    Press: PressRecognizer,\n\n    on: addEventListeners,\n    off: removeEventListeners,\n    each: each,\n    merge: merge,\n    extend: extend,\n    assign: assign,\n    inherit: inherit,\n    bindFn: bindFn,\n    prefixed: prefixed\n});\n\n// this prevents errors when Hammer is loaded in the presence of an AMD\n//  style loader but by script tag, not by the loader.\nvar freeGlobal = (typeof window !== 'undefined' ? window : (typeof self !== 'undefined' ? self : {})); // jshint ignore:line\nfreeGlobal.Hammer = Hammer;\n\nif (typeof define === 'function' && define.amd) {\n    define(function() {\n        return Hammer;\n    });\n} else if (typeof module != 'undefined' && module.exports) {\n    module.exports = Hammer;\n} else {\n    window[exportName] = Hammer;\n}\n\n})(window, document, 'Hammer');\n"],"sourceRoot":""}